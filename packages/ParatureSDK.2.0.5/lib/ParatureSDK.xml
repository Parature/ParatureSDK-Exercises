<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ParatureSDK</name>
    </assembly>
    <members>
        <member name="T:ParatureSDK.ApiCallFactory">
            <summary>
            The APICallFactory manages all calls made to the APIs server. No API calls should be made outside of this class.
            </summary>    
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectCreateUpdate(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule,System.Xml.XmlDocument,System.Int64)">
             <summary>
             This method will create/update an Object in Parature.
             </summary>
             <param name="paracredentials">
            The credentials to be used for making the API call. 
            Value Type: <see cref="T:ParatureSDK.ParaCredentials"/>   (ParaConnect.ParaCredentials)
            </param>
             <param name="module">
            The name of the module to create or update. Choose from the ParatureModule enum list. 
            Value Type: <see cref="T:ParatureSDK.ParaEnums.ParatureModule"/>   (ParatureModule)
            </param>
             <param name="objectid">
            Provides the ID of the object being inserted or updated. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="fileToPost">
            When creating or updating an object, you will need to pass the properly formatted XML document to be sent to the server.
            Value Type: <see cref="T:System.String"/>   (System.String)
            </param>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectCreateUpdate(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule,System.Xml.XmlDocument,System.Int64,System.Collections.ArrayList)">
             <summary>
             This method will create/update an Object in Parature.
             </summary>
             <param name="paracredentials">
            The credentials to be used for making the API call. 
            Value Type: <see cref="T:ParatureSDK.ParaCredentials"/>   (ParaConnect.ParaCredentials)
            </param>
             <param name="module">
            The name of the module to create or update. Choose from the ParatureModule enum list. 
            Value Type: <see cref="T:ParatureSDK.ParaEnums.ParatureModule"/>   (ParatureModule)
            </param>
             <param name="fileToPost">
            When creating or updating an object, you will need to pass the properly formatted XML document to be sent to the server.
            Value Type: <see cref="T:System.String"/>   (System.String)
             </param>
             <param name="objectid">
            Provides the ID of the object being inserted or updated. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
            <param name="arguments"></param>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.EntityCreateUpdate(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureEntity,System.Xml.XmlDocument,System.Int64)">
             <summary>
             This method will create/update an Object in Parature.
             </summary>
             <param name="paracredentials">
            The credentials to be used for making the API call. 
            Value Type: <see cref="T:ParatureSDK.ParaCredentials"/>   (ParaConnect.ParaCredentials)
            </param>
            <param name="objectid">
            Provides the ID of the object being inserted or updated. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
            <param name="entity"></param>
            <param name="fileToPost">
            When creating or updating an object, you will need to pass the properly formatted XML document to be sent to the server.
            Value Type: <see cref="T:System.String"/>   (System.String)
            </param>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectDelete(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule,System.Int64,System.Boolean)">
             <summary>
             Use this method to delete the object passed to it.
             </summary>
             <param name="paracredentials">
            The credentials to be used for making the API call. 
            Value Type: <see cref="T:ParatureSDK.ParaCredentials"/>   (ParaConnect.ParaCredentials)
            </param>
             <param name="module">
            The name of the module to create or update. Choose from the ParatureModule enum list. 
            Value Type: <see cref="T:ParatureSDK.ParaEnums.ParatureModule"/>   (Paraenums.ParatureModule)
            </param>
             <param name="objectid">
            The id of the object to create or update. 
            Value Type: <see cref="T:System.Int64"/>   (System.int64)
            </param>
             <param name="purge">
            Indicates whether this a Purge (permanent deletion), or just a deletion (move to trash bin). Indicate TRUE for a purge, FALSE for a delete
            Value Type: <see cref="T:System.Boolean"/>   (System.bool)
            </param>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.EntityDelete(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureEntity,System.Int64)">
             <summary>
             Use this method to delete the entity passed to it.
             </summary>
             <param name="paracredentials">
            The credentials to be used for making the API call. 
            Value Type: <see cref="T:ParatureSDK.ParaCredentials"/>   (ParaConnect.ParaCredentials)
            </param>
             <param name="entity">
            The name of the entity to delete. Choose from the ParatureEntity enum list. 
            Value Type: <see cref="T:ParatureSDK.ParaEnums.ParatureEntity"/>   (Paraenums.ParatureEntity)
             </param>
             <param name="entityid">
            The id of the entity to delete. 
            Value Type: <see cref="T:System.Int64"/>   (System.int64)
             </param>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectGetDetail``1(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule,System.Int64)">
             <summary>
             Use this method to get the details of an object that you plan to fill.
             </summary>
             <param name="paracredentials">
            The credentials to be used for making the API call. 
            Value Type: <see cref="T:ParatureSDK.ParaCredentials"/>   (ParaConnect.ParaCredentials)
            </param>
             <param name="module">
            The name of the module to create or update. Choose from the ParatureModule enum list. 
            Value Type: <see cref="T:ParatureSDK.ParaEnums.ParatureModule"/>   (Paraenums.ParatureModule)
            </param>
             <param name="objectid">
            The id of the object to create or update. 
            Value Type: <see cref="T:System.Int64"/>   (System.int64)
            </param>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectGetDetail(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureEntity,System.Int64)">
             <summary>
             Use this method to get the details of an Entity that you plan to fill.
             </summary>
             <param name="paracredentials">
            The credentials to be used for making the API call. 
            Value Type: <see cref="T:ParatureSDK.ParaCredentials"/>   (ParaConnect.ParaCredentials)
            </param>
             <param name="module">
            The name of the entity to create or update. Choose from the ParatureEntity enum list. 
            Value Type: <see cref="T:ParatureSDK.ParaEnums.ParatureEntity"/>   (Paraenums.ParatureEntity)
            </param>
            <param name="entity"></param>
            <param name="objectid">
            The id of the object to create or update. 
            Value Type: <see cref="T:System.Int64"/>   (System.int64)
            </param>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectGetDetail(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule,System.Int64,System.Collections.ArrayList)">
             <summary>
             Use this method to get the details of an object that you plan to fill.
             </summary>
             <param name="paracredentials">
            The credentials to be used for making the API call. 
            Value Type: <see cref="T:ParatureSDK.ParaCredentials"/>   (ParaConnect.ParaCredentials)
            </param>
             <param name="module">
            The name of the module to create or update. Choose from the ParatureModule enum list. 
            Value Type: <see cref="T:ParatureSDK.ParaEnums.ParatureModule"/>   (ParatureModule)
            </param>
             <param name="objectid">
            The id of the object to create or update. 
            Value Type: <see cref="T:System.Int64"/>   (System.int64)
            </param>
             <param name="arguments">
            The list of extra optional arguments you need to include in the call. For example, for a ticket, we might want to get the action history.
            Value Type: <see cref="T:System.Collections.ArrayList"/>   (System.String[])
            </param>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectGetList(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule,System.Collections.ArrayList)">
             <summary>
             Use this method to get a list of objects that you plan to fill.
             </summary>
             <param name="paracredentials">
            The credentials to be used for making the API call. 
            Value Type: <see cref="T:ParatureSDK.ParaCredentials"/>   (ParaConnect.ParaCredentials)
            </param>
             <param name="module">
            The name of the module to create or update. Choose from the ParatureModule enum list. 
            </param>
             <param name="arguments">
            The list of extra optional arguments you need to include in the call. For example, any fields filtering, any custom fields to include, etc.
            Value Type: <see cref="T:System.Collections.ArrayList"/>   
            </param>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectGetList``1(ParatureSDK.ParaCredentials,System.Collections.ArrayList)">
             <summary>
             Use this method to get a list of objects that you plan to fill.
             </summary>
             <param name="paracredentials">
            The credentials to be used for making the API call. 
            Value Type: <see cref="T:ParatureSDK.ParaCredentials"/>   (ParaConnect.ParaCredentials)
            </param>
             <param name="module">
            The name of the module to create or update. Choose from the ParatureModule enum list. 
            </param>
             <param name="arguments">
            The list of extra optional arguments you need to include in the call. For example, any fields filtering, any custom fields to include, etc.
            Value Type: <see cref="T:System.Collections.ArrayList"/>   
            </param>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectGetList(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureEntity,System.Collections.ArrayList)">
             <summary>
             Use this method to get a list of objects that you plan to fill.
             </summary>
             <param name="paracredentials">
            The credentials to be used for making the API call. 
            Value Type: <see cref="T:ParatureSDK.ParaCredentials"/>   (ParaConnect.ParaCredentials)
            </param>
             <param name="entity">
            The name of the entity to list. Choose from the ParatureEntity enum list. 
            </param>      
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectGetSchema(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule)">
            <summary>
            Use this method to get the Schema XML of an object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectGetSchema``1(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule)">
            <summary>
            Use this method to get the Schema XML of an object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectCheckCustomFieldTypes(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule,ParatureSDK.ParaObjects.ParaEntity)">
            <summary>
            Use this method to determine if any custom fields have custom validation
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ObjectCheckCustomFieldTypes``1(ParatureSDK.ParaCredentials,ParatureSDK.ParaObjects.ParaEntity)">
            <summary>
            Use this method to determine if any custom fields have custom validation
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.EntityGetSchema(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureEntity)">
            <summary>
            Use this method to get the Schema XML of an object.
            </summary>
            <param name="paracredentials"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ApiMakeTheCall(System.String,ParatureSDK.ParaEnums.ApiCallHttpMethod,System.Xml.XmlDocument)">
            <summary>
            The true call is being made by this method.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ApiMakeTheCall(System.String,ParatureSDK.ParaEnums.ApiCallHttpMethod,System.Net.Mail.Attachment)">
            <summary>
            The call, with passing a binary file.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ApiMakeTheCall(System.String,ParatureSDK.ParaEnums.ApiCallHttpMethod,System.Byte[],System.String,System.String)">
            <summary>
            The call, with passing a binary file.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiCallFactory.ApiHttpRequestProcessor(ParatureSDK.ParaObjects.ApiCallResponse,System.Net.HttpWebRequest)">
            <summary>
            Performs the http web request for all ApiMakeCall methods.
            </summary>
            <param name="ac">
            Api Call response, this object is partially filled in the ApiMakeCall methods, this method will just be adding 
            certain data to it and return it.
            </param>
            <param name="req">
            The http web Request object. Each ApiMakeCall method will have its own http webrequest information. This method will make 
            the http call with the request object passed to it.
            </param>
            <returns></returns>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Account">
            <summary>
            Contains all the methods that allow you to interact with the Parature Account module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.Insert(ParatureSDK.ParaObjects.Account,ParatureSDK.ParaCredentials)">
            <summary>
            Create a Parature Account. Requires an Object and a credentials object. Will return the Newly Created accountId. Returns 0 if the account creation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.Update(ParatureSDK.ParaObjects.Account,ParatureSDK.ParaCredentials)">
            <summary>
            Update a Parature Account. Requires an Object and a credentials object.  Will return the updated accountId. Returns 0 if the account update operation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.GetDetails(System.Int64,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
             <summary>
             Returns an account object with all the properties of an account.
             </summary>
             <param name="accountid">
            The account number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="pc">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="requestDepth">
             For a simple account request, please put 0. <br/>When Requesting an account, there might be related objects linked to that Account: such as products, viewable accounts, etc. <br/>With a regular Account detail call, generally only the ID and names of the extra objects are loaded. 
             <example>For example, the call will return an Account.Product object, but only the Name and ID values will be filled. All of the other properties of the product object will be empty. If you select RequestDepth=1, then we will go one level deeper into our request and will therefore retrieve the product's detail for you. Products might have assets linked to them, so if you select RequestDepth=2, we will go to an even deeped level and return all the assets properties for that product, etc.<br/> Please make sure you only request the depth you need, as this might make your request slower. </example>
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an account object from an XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="accountXml">
            The Account XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns an account object with all the properties of an account.
             </summary>
             <param name="accountid">
            The account number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="pc">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery)">
            <summary>
            Provides you with the capability to list accounts, following criteria you would set
            by instantiating a ModuleQuery.AccountQuery object
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an accounts list object from an XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="accountListXml">
            The Account List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list accounts, following criteria you would set
            by instantiating a ModuleQuery.AccountQuery object.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Will return the first 25 accounts returned by the APIs.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>  
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Will return the first 25 accounts returned by the APIs.
            </summary>            
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.Delete(System.Int64,ParatureSDK.ParaCredentials,System.Boolean)">
             <summary>
             Provides the capability to delete an Account.
             </summary>
             <param name="accountId">
             The id of the Account to delete
             </param>
            <param name="pc"></param>
            <param name="purge">
             If purge is set to true, the account will be permanently deleted. Otherwise, it will just be 
             moved to the trash bin, so it will still be able to be restored from the service desk.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.FillList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Fills an account list object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.Schema(ParatureSDK.ParaCredentials)">
            <summary>
            Gets an empty object with the scheam (custom fields, if any).
            </summary>            
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.SchemaWithCustomFieldTypes(ParatureSDK.ParaCredentials)">
            <summary>
            Gets an empty object with the scheam (custom fields, if any).  This call will also try to create a dummy
            record in order to determine if any of the custom fields have special validation rules (e.g. email, phone, url)
            and set the "dataType" of the custom field accordingly.
            </summary> 
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.View.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a view object with all of its properties filled.
             </summary>
             <param name="id">
             The view number that you would like to get the details of.
             Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="creds">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.View.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an view object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="xml">
            The view XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.View.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an view list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="listXml">
            The view List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Account.View.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.ViewQuery)">
            <summary>
            Get the List of views from within your Parature license
            </summary>
            <param name="creds"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.Insert``1(``0,ParatureSDK.ParaCredentials)">
            <summary>
            Create a Parature Account. Requires an Object and a credentials object. Will return the Newly Created accountId. Returns 0 if the entity creation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.Update``1(``0,ParatureSDK.ParaCredentials)">
            <summary>
            Update a Parature Account. Requires an Object and a credentials object.  Will return the updated accountId. Returns 0 if the entity update operation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.GetDetails``1(System.Int64,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
             <summary>
             Returns an entity object with all the properties of an entity.
             </summary>
             <param name="id">
            The entity number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="pc">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="requestDepth">
             For a simple entity request, please put 0. <br/>When Requesting an entity, there might be related objects linked to that Account: such as products, viewable accounts, etc. <br/>With a regular Account detail call, generally only the ID and names of the extra objects are loaded. 
             <example>For example, the call will return an Account.Product object, but only the Name and ID values will be filled. All of the other properties of the product object will be empty. If you select RequestDepth=1, then we will go one level deeper into our request and will therefore retrieve the product's detail for you. Products might have assets linked to them, so if you select RequestDepth=2, we will go to an even deeped level and return all the assets properties for that product, etc.<br/> Please make sure you only request the depth you need, as this might make your request slower. </example>
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.GetDetails``1(System.Xml.XmlDocument)">
            <summary>
            Returns an entity object from an XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="accountXml">
            The Account XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.GetDetails``1(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns an entity object with all the properties of an entity.
             </summary>
             <param name="id">
            The entity number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="pc">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.GetList``1(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery)">
            <summary>
            Provides you with the capability to list accounts, following criteria you would set
            by instantiating a ModuleQuery.AccountQuery object
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.GetList``1(System.Xml.XmlDocument)">
            <summary>
            Returns an accounts list object from an XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="xml">
            The Account List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.GetList``1(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list accounts, following criteria you would set
            by instantiating a ModuleQuery.AccountQuery object.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.GetList``1(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Will return the first 25 accounts returned by the APIs.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>  
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.GetList``1(ParatureSDK.ParaCredentials)">
            <summary>
            Will return the first 25 accounts returned by the APIs.
            </summary>            
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.Delete``1(System.Int64,ParatureSDK.ParaCredentials,System.Boolean)">
             <summary>
             Provides the capability to delete an Account.
             </summary>
             <param name="accountId">
             The id of the Account to delete
             </param>
            <param name="pc"></param>
            <param name="purge">
             If purge is set to true, the entity will be permanently deleted. Otherwise, it will just be 
             moved to the trash bin, so it will still be able to be restored from the service desk.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.FillList``1(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Fills an entity list object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.Schema``1(ParatureSDK.ParaCredentials)">
            <summary>
            Gets an empty object with the scheam (custom fields, if any).
            </summary>            
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiRequest.SchemaWithCustomFieldTypes``1(ParatureSDK.ParaCredentials)">
            <summary>
            Gets an empty object with the scheam (custom fields, if any).  This call will also try to create a dummy
            record in order to determine if any of the custom fields have special validation rules (e.g. email, phone, url)
            and set the "dataType" of the custom field accordingly.
            </summary> 
        </member>
        <member name="T:ParatureSDK.ApiHandler.Article">
            <summary>
            Contains all the methods that allow you to interact with the Parature Knowledge Base module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.Schema(ParatureSDK.ParaCredentials)">
            <summary>
            Provides the Schema of the article module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.Delete(System.Int64,ParatureSDK.ParaCredentials,System.Boolean)">
             <summary>
             Provides the capability to delete a Article.
             </summary>
             <param name="articleId">
             The id of the Article to delete
             </param>
             <param name="purge">
             If purge is set to true, the Article will be permanently deleted. Otherwise, it will just be 
             moved to the trash bin, so it will still be able to be restored from the service desk.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.Insert(ParatureSDK.ParaObjects.Article,ParatureSDK.ParaCredentials)">
            <summary>
            Creates a Parature Article. Requires an Object and a credentials object. Will return the Newly Created articleId
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.Update(ParatureSDK.ParaObjects.Article,ParatureSDK.ParaCredentials)">
            <summary>
            Updates a Parature Article. Requires an Object and a credentials object.  Will return the updated articleId
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.GetDetails(System.Int64,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
             <summary>
             Returns an Article object with all the properties of an Article.
             </summary>
             <param name="articleId">
            The Article number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="pc">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="requestDepth">
             For a simple customer request, please put 0. <br/>When Requesting a Customer, there might be related objects linked to that Customer: such as Account, etc. <br/>With a regular Customer detail call, generally only the ID and names of the second level objects are loaded. 
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns an Article object with all of its properties filled.
             </summary>
             <param name="articleId">
            The Article number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="pc">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an article object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="articleXml">
            The Article XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an article list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="articleListXml">
            The Article List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ArticleQuery)">
            <summary>
            Provides you with the capability to list Customers, following criteria you would set
            by instantiating a ModuleQuery.CustomerQuery object
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ArticleQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list Articles, following criteria you would set
            by instantiating a ModuleQuery.ArticleQuery object.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Returns the first 25 Articles returned by the APIs.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>           
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Returns the first 25 Articles returned by the APIs.           
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.FillList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ArticleQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Fills an Article list object.
            </summary>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Article.ArticleFolder">
            <summary>
            Contains all the methods needed to work with the download module's folders.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.Schema(ParatureSDK.ParaCredentials)">
            <summary>
            Provides the Schema of the article folder entity.
            </summary>
            <param name="creds"></param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.FolderGetIdByName(System.String,System.Boolean,ParatureSDK.ParaCredentials)">
            <summary>
            Locates a folder with the name provided, will return the id if found. Otherwise, it will return 0.
            </summary>
            <param name="FolderName">
            The name of the folder you are looking for.
            </param>                
            <param name="IgnoreCase">
            Whether or not this methods needs to ignore case when looking for the folder name or not.
            </param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.FolderGetIdByName(System.String,System.Boolean,ParatureSDK.ParaCredentials,System.Int64)">
            <summary>
            Locates a folder with the name provided and which has the parent folder of your choice, will return the id if found. Otherwise, it will return 0.
            </summary>
            <param name="FolderName">
            The name of the folder you are looking for.
            </param>                
            <param name="IgnoreCase">
            Whether or not this methods needs to ignore case when looking for the folder name or not.
            </param>
            <param name="ParentFolderId">
            The parent folder under which to look for a folder by name.
            </param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.Delete(System.Int64,ParatureSDK.ParaCredentials)">
            <summary>
            Provides the capability to delete an Article Folder.
            </summary>
            <param name="articleFolder">
            The id of the Article Folder to delete
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.Insert(ParatureSDK.ParaObjects.ArticleFolder,ParatureSDK.ParaCredentials)">
            <summary>
            Creates a Parature Article Folder. Requires an Object and a credentials object. Will return the Newly Created Downloadid. Returns 0 if the Customer creation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.Update(ParatureSDK.ParaObjects.ArticleFolder,ParatureSDK.ParaCredentials)">
            <summary>
            Updates a Parature Article. Requires an Object and a credentials object.  Will return the updated Downloadid. Returns 0 if the Customer update operation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.GetDetails(System.Int64,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
             <summary>
             Returns a Article object with all the properties of a customer.
             </summary>
             <param name="ArticleFolderid">
            The Article number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="RequestDepth">
             For a simple Article request, please put 0. <br/>When Requesting a Article, there might be related objects linked to that Article: such as Products, etc. <br/>With a regular Download detail call, generally only the ID and names of the second level objects are loaded. 
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an article folder object from a XML Document.  No calls to the APIs are made when calling this method.
            </summary>
            <param name="ArticleFolderXml">
            The Article Folder XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Provides you with the capability to list Article Folders.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.ArticleFolderQuery)">
            <summary>
            Provides you with the capability to list Article Folders, following criteria you would set
            by instantiating a ModuleQuery.DownloadQuery object
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.ArticleFolderQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list Article Folders, following criteria you would set
            by instantiating a ModuleQuery.ArticleQuery object.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an article folder list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="ArticleFoldersListXml">
            The Article Folder List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Article.ArticleFolder.FillList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.ArticleFolderQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Fills an Article list object.
            </summary>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Asset">
            <summary>
            Contains all the methods that allow you to interact with the Parature Asset module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.Schema(ParatureSDK.ParaCredentials)">
            <summary>
            Provides the Schema of the asset module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.SchemaWithCustomFieldTypes(ParatureSDK.ParaCredentials)">
            <summary>
            Gets an empty object with the scheam (custom fields, if any).  This call will also try to create a dummy
            record in order to determine if any of the custom fields have special validation rules (e.g. email, phone, url)
            and set the "dataType" of the custom field accordingly.
            </summary> 
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.Insert(ParatureSDK.ParaObjects.Asset,ParatureSDK.ParaCredentials)">
            <summary>
            Creates a Parature Ticket. Requires an Object and a credentials object. Will return the Newly Created Assetid. Returns 0 if the Asset creation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.Update(ParatureSDK.ParaObjects.Asset,ParatureSDK.ParaCredentials)">
            <summary>
            Updates a Parature Asset. Requires an Object and a credentials object.  Will return the updated Assetid. Returns 0 if the Asset update operation failed.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.Delete(System.Int64,ParatureSDK.ParaCredentials,System.Boolean)">
             <summary>
             Provides the capability to delete a Asset.
             </summary>
             <param name="Assetid">
             The id of the Asset to delete
             </param>
             <param name="purge">
             If purge is set to true, the Asset will be permanently deleted. Otherwise, it will just be 
             moved to the trash bin, so it will still be able to be restored from the service desk.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.GetDetails(System.Int64,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
             <summary>
             Returns a Asset object with all the properties of an Asset.
             </summary>
             <param name="Assetid">
            The Asset number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>           
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="RequestDepth">
             For a simple Asset request, please put 0. <br/>When Requesting an Asset, there might be related objects linked to that Asset: such as Customer Owner, Product, etc. <br/>With a regular Asset detail call, generally only the ID and names of the extra objects are loaded. 
             <example>For example, the call will return a Asset.CustomerOwner object, but only the Name and ID values will be filled. All of the other properties of the Customer object will be empty. If you select RequestDepth=1, then we will go one level deeper into our request and will therefore retrieve the Customer's detail for you. Customers might be part of an account, so if you select RequestDepth=2, we will go to an even deeper level and return the full account object with all of its properties, etc.<br/> Please make sure you only request the depth you need, as this might make your request slower. </example>
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Asset object with all the properties of an Asset.
             </summary>
             <param name="Assetid">
            The Asset number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>           
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>           
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an asset object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="AssetXML">
            The Asset XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an assets list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="AssetsListXML">
            The Asset List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.AssetQuery)">
            <summary>
            Provides you with the capability to list Assets, following criteria you would set
            by instantiating a ModuleQuery.AssetQuery object
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Gets the first 25 assets returned by the API.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Gets the first 25 assets returned by the API.
            </summary>            
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.AssetQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list Assets, following criteria you would set
            by instantiating a ModuleQuery.AssetQuery object.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.FillList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.AssetQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Fills an Asset list object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Asset.ActionRun(System.Int64,ParatureSDK.ParaObjects.Action,ParatureSDK.ParaCredentials)">
            <summary>
            Runs an Asset action.
            </summary>
            <param name="assetId">
            The Asset you would like to run this action on.
            </param>
            <param name="action">
            The action object your would like to run on this ticket.
            </param>
            <param name="creds">
            Your credentials object.
            </param>
            <returns></returns>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Chat">
            <summary>
            Contains all the methods that allow you to interact with the Parature Chat module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Chat.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Chat object with all the properties of a chat.
             </summary>
             <param name="chatid">
            The chat number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Chat.GetDetails(System.Int64,ParatureSDK.ParaCredentials,System.Boolean,System.Boolean)">
             <summary>
             Returns a Chat object with all the properties of a chat.
             </summary>
             <param name="chatid">
            The chat number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="IncludeHistory">
             Whether to include the chat history (action history) for this particular chat
             </param>
             <param name="IncludeTranscripts">
             Whether to include the chat transcript (chat discussion) for this particular chat 
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Chat.SchemaWithCustomFieldTypes(ParatureSDK.ParaCredentials)">
            <summary>
            Gets an empty object with the scheam (custom fields, if any).  This call will also try to create a dummy
            record in order to determine if any of the custom fields have special validation rules (e.g. email, phone, url)
            and set the "dataType" of the custom field accordingly.
            </summary> 
        </member>
        <member name="M:ParatureSDK.ApiHandler.Chat.GetTranscript(System.Int64,ParatureSDK.ParaCredentials)">
            <summary>
            Retrieve the transcript for a particualr chat
            </summary>
            <param name="chatId"></param>
            <param name="paraCredentials"></param>
            <returns>A list of chat messages</returns>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Csr">
            <summary>
            Contains all the methods that allow you to interact with the Parature Csr module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Schema(ParatureSDK.ParaCredentials)">
            <summary>
            Provides the Schema of the CSR module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Delete(System.Int64,ParatureSDK.ParaCredentials)">
            <summary>
            Provides the capability to delete a CSR.
            </summary>
            <param name="CsrId">
            The id of the CSR to delete
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns an Csr object with all of its properties filled.
             </summary>
             <param name="Csrid">
            The Csr number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>               
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an csr object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="CsrXML">
            The Csr XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Insert(ParatureSDK.ParaObjects.Csr,ParatureSDK.ParaCredentials)">
            <summary>
            Creates a Parature CSR. Requires an Object and a credentials object. Will return the Newly Created CSR ID
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an csr list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="CsrListXML">
            The Csr List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Get the list of Csrs from within your Parature license.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Update(ParatureSDK.ParaObjects.Csr,ParatureSDK.ParaCredentials)">
            <summary>
            Updates a Parature Csr. Requires a Csr object and a ParaCredentials object.  Will return the updated Csrid
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.CsrQuery)">
            <summary>
            Get the list of Csrs from within your Parature license.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.FillList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.CsrQuery)">
            <summary>
            Fills a Sla list object.
            </summary>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Csr.Status">
            <summary>
            Contains all the methods needed to work with the Ticket statuses.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Status.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Status object with all of its properties filled.
             </summary>
             <param name="id">
             The Status number that you would like to get the details of.
             Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="creds">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Status.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an Status object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="xml">
            The Status XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Status.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an Status list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="listXml">
            The Status List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Status.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.StatusQuery)">
            <summary>
            Get the List of Statuss from within your Parature license
            </summary>
            <param name="creds"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Role.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Role object with all of its properties filled.
             </summary>
             <param name="id">
             The Role number that you would like to get the details of.
             Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="creds">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Role.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an role object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="xml">
            The Role XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Role.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an role list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="listXml">
            The Role List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Csr.Role.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.RoleQuery)">
            <summary>
            Get the List of Roles from within your Parature license
            </summary>
            <param name="creds"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Customer">
            <summary>
            Contains all the methods that allow you to interact with the Parature Customer module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Delete(System.Int64,ParatureSDK.ParaCredentials,System.Boolean)">
             <summary>
             Provides the capability to delete a Customer.
             </summary>
             <param name="Customerid">
             The id of the Customer to delete
             </param>
             <param name="purge">
             If purge is set to true, the Customer will be permanently deleted. Otherwise, it will just be 
             moved to the trash bin, so it will still be able to be restored from the service desk.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Insert(ParatureSDK.ParaObjects.Customer,ParatureSDK.ParaCredentials)">
            <summary>
            Creates a Parature Customer. Requires an Object and a credentials object. Will return the Newly Created Customerid. Returns 0 if the Customer creation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Insert(ParatureSDK.ParaObjects.Customer,ParatureSDK.ParaCredentials,System.Boolean,System.Boolean)">
            <summary>
            Creates a Parature Customer. Requires an Object and a credentials object. Need to specific whether to include a customer notification for the insert, as well as if the password should be included in the Notificaiton. 
            Will return the Newly Created Customerid. Returns 0 if the Customer creation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Update(ParatureSDK.ParaObjects.Customer,ParatureSDK.ParaCredentials)">
            <summary>
            Updates a Parature Customer. Requires an Object and a credentials object.  Will return the updated Customerid. Returns 0 if the Customer update operation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Update(ParatureSDK.ParaObjects.Customer,ParatureSDK.ParaCredentials,System.Boolean,System.Boolean)">
            <summary>
            Updates a Parature Customer. Requires an Object and a credentials object. Need to specific whether to include a customer notification for the insert, as well as if the password should be included in the Notificaiton. Will return the updated Customerid. Returns 0 if the Customer update operation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.GetDetails(System.Int64,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
             <summary>
             Returns a customer object with all the properties of a customer.
             </summary>
             <param name="customerid">
            The customer number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="RequestDepth">
             For a simple customer request, please put 0. <br/>When Requesting a Customer, there might be related objects linked to that Customer: such as Account, etc. <br/>With a regular Customer detail call, generally only the ID and names of the second level objects are loaded. 
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Customer object with all of its properties filled.
             </summary>
             <param name="Customerid">
            The Customer number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an customer object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="CustomerXML">
            The Customer XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an customer list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="CustomerListXML">
            The Customer List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery)">
            <summary>
            Provides you with the capability to list Customers, following criteria you would set
            by instantiating a ModuleQuery.CustomerQuery object
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list Customers, following criteria you would set
            by instantiating a ModuleQuery.CustomerQuery object.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Returns the list of the first 25 customers returned by the API.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>            
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Returns the list of the first 25 customers returned by the API.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.FillList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Fills an Customer list object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.SchemaWithCustomFieldTypes(ParatureSDK.ParaCredentials)">
            <summary>
            Gets an empty object with the scheam (custom fields, if any).  This call will also try to create a dummy
            record in order to determine if any of the custom fields have special validation rules (e.g. email, phone, url)
            and set the "dataType" of the custom field accordingly.
            </summary> 
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Role.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Role object with all of its properties filled.
             </summary>
             <param name="id">
             The Role number that you would like to get the details of.
             Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="creds">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Role.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an role object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="xml">
            The Role XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Role.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an role list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="listXml">
            The Role List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Role.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.RoleQuery)">
            <summary>
            Get the List of Roles from within your Parature license
            </summary>
            <param name="creds"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Status.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Status object with all of its properties filled.
             </summary>
             <param name="id">
             The Status number that you would like to get the details of.
             Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="creds">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Status.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an Status object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="xml">
            The Status XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Status.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an Status list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="listXml">
            The Status List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.Status.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.StatusQuery)">
            <summary>
            Get the List of Statuss from within your Parature license
            </summary>
            <param name="creds"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.View.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a view object with all of its properties filled.
             </summary>
             <param name="id">
             The view number that you would like to get the details of.
             Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="creds">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.View.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an view object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="xml">
            The view XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.View.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an view list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="listXml">
            The view List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Customer.View.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.ViewQuery)">
            <summary>
            Get the List of views from within your Parature license
            </summary>
            <param name="creds"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Download">
            <summary>
            Contains all the methods that allow you to interact with the Parature Download module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.Schema(ParatureSDK.ParaCredentials)">
            <summary>
            Provides the Schema of the download module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.Delete(System.Int64,ParatureSDK.ParaCredentials,System.Boolean)">
             <summary>
             Provides the capability to delete a Download.
             </summary>
             <param name="downloadId">
             The id of the Download to delete
             </param>
            <param name="creds"></param>
            <param name="purge">
             If purge is set to true, the Download will be permanently deleted. Otherwise, it will just be 
             moved to the trash bin, so it will still be able to be restored from the service desk.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.Insert(ParatureSDK.ParaObjects.Download,ParatureSDK.ParaCredentials)">
            <summary>
            Creates a Parature Download. Requires an Object and a credentials object. Will return the Newly Created Downloadid. Returns 0 if the Customer creation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.Update(ParatureSDK.ParaObjects.Download,ParatureSDK.ParaCredentials)">
            <summary>
            Updates a Parature Download. Requires an Object and a credentials object.  Will return the updated Downloadid. Returns 0 if the Customer update operation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.GetDetails(System.Int64,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
             <summary>
             Returns a Download object with all of its properties.
             </summary>
             <param name="downloadId">
            The Download number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="creds">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="requestDepth">
             For a simple Download request, please put 0. <br/>When Requesting a Download, there might be related objects linked to that Download: such as Products, etc. <br/>With a regular Download detail call, generally only the ID and names of the second level objects are loaded. 
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Download object with all of its properties filled.
             </summary>
             <param name="downloadId">
            The Customer number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="creds">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an download object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="downloadXml">
            The Download XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an download list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="DownloadListXML">
            The Download List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.DownloadQuery)">
            <summary>
            Provides you with the capability to list Downloads, following criteria you would set
            by instantiating a ModuleQuery.DownloadQuery object
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.DownloadQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list Downloads, following criteria you would set
            by instantiating a ModuleQuery.DownloadQuery object.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Returns a list of the first 25 Downloads returned by the APIs.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Returns a list of the first 25 Downloads returned by the APIs.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.FillList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.DownloadQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Fills a Download list object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.HasMultipleFoldersAndConvert(System.Xml.XmlDocument)">
            <summary>
            Modify the XML so it can be parsed, and check to see if it supports multiple folders
            </summary>
            <param name="xmlReceived"></param>
            <returns></returns>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Download.DownloadFolder">
            <summary>
            Contains all the methods needed to work with the download module's folders.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.DownloadFolder.FolderGetIdByName(System.String,System.Boolean,ParatureSDK.ParaCredentials)">
            <summary>
            Locates a folder with the name provided, will return the id if found. Otherwise, it will return 0.
            </summary>
            <param name="FolderName">
            The name of the folder you are looking for.
            </param>                
            <param name="IgnoreCase">
            Whether or not this methods needs to ignore case when looking for the folder name or not.
            </param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.DownloadFolder.FolderGetIdByName(System.String,System.Boolean,ParatureSDK.ParaCredentials,System.Int64)">
            <summary>
            Locates a folder with the name provided and which has the parent folder of your choice, will return the id if found. Otherwise, it will return 0.
            </summary>
            <param name="FolderName">
            The name of the folder you are looking for.
            </param>                
            <param name="IgnoreCase">
            Whether or not this methods needs to ignore case when looking for the folder name or not.
            </param>
            <param name="ParentFolderId">
            The parent folder under which to look for a folder by name.
            </param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.DownloadFolder.Insert(ParatureSDK.ParaObjects.DownloadFolder,ParatureSDK.ParaCredentials)">
            <summary>
            Creates a Parature Download Folder. Requires an Object and a credentials object. Will return the Newly Created Downloadid. Returns 0 if the Customer creation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.DownloadFolder.Update(ParatureSDK.ParaObjects.DownloadFolder,ParatureSDK.ParaCredentials)">
            <summary>
            Updates a Parature Download. Requires an Object and a credentials object.  Will return the updated Downloadid. Returns 0 if the Customer update operation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.DownloadFolder.GetDetails(System.Int64,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
             <summary>
             Returns a Download object with all the properties of a customer.
             </summary>
             <param name="Downloadid">
            The Download number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="RequestDepth">
             For a simple Download request, please put 0. <br/>When Requesting a Download, there might be related objects linked to that Download: such as Products, etc. <br/>With a regular Download detail call, generally only the ID and names of the second level objects are loaded. 
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.DownloadFolder.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.DownloadFolderQuery)">
            <summary>
            Provides you with the capability to list Downloads, following criteria you would set
            by instantiating a ModuleQuery.DownloadQuery object
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.DownloadFolder.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.DownloadFolderQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list Downloads, following criteria you would set
            by instantiating a ModuleQuery.DownloadQuery object.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.DownloadFolder.FillList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.DownloadFolderQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Fills an Download list object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.DownloadFolder.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an downloadFolder object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="DownloadFolderXML">
            The DownloadFolder XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Download.DownloadFolder.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an downloadFolder list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="DownloadFolderListXML">
            The DownloadFolder List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Department.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Department object with all of its properties filled.
             </summary>
             <param name="departmentid">
            The Department number that you would like to get the details of. 
            </param>
             <param name="paraCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>               
        </member>
        <member name="M:ParatureSDK.ApiHandler.Department.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns a department object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="departmentXml">
            The department XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Department.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an Department list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="departmentListXml">
            The Departments List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Department.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Get the list of Departments from within your Parature license.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Department.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.DepartmentQuery)">
            <summary>
            Get the list of Departments from within your Parature license.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Department.FillList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.DepartmentQuery)">
            <summary>
            Fills a Departmentslist object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Queue.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Queue object with all of its properties filled.
             </summary>
            <param name="queueId"></param>
            <param name="paraCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>               
        </member>
        <member name="M:ParatureSDK.ApiHandler.Queue.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an queue object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="queueXml">
            The Queue XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Queue.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an queue list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="queueListXml">
            The Queue List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Queue.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Get the list of Queues from within your Parature license.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Queue.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.QueueQuery)">
            <summary>
            Get the list of Queues from within your Parature license.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Queue.FillList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.QueueQuery)">
            <summary>
            Fills a Queue List object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Sla.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns an SLA object with all of its properties filled.
             </summary>
             <param name="slaId">
            The SLA number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="paraCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>               
        </member>
        <member name="M:ParatureSDK.ApiHandler.Sla.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an sla object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="slaXml">
            The Sla XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Sla.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Get the list of SLAs from within your Parature license.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Sla.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.SlaQuery)">
            <summary>
            Get the list of SLAs from within your Parature license.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Sla.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an sla list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="slaListXml">
            The Sla List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Sla.FillList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.SlaQuery)">
            <summary>
            Fills a Sla list object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Timezone.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Timezone object with all of its properties filled.
             </summary>
             <param name="Csrid">
            The Timezone id that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="creds">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>               
        </member>
        <member name="M:ParatureSDK.ApiHandler.Timezone.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an Timezone object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="xml">
            The Timezone XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Timezone.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an Timezone list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="listXml">
            The Timezone List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Timezone.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Get the list of Timezones from within your Parature license.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Timezone.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.TimezoneQuery)">
            <summary>
            Get the list of Timezones from within your Parature license.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Timezone.FillList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.TimezoneQuery)">
            <summary>
            Fills a Timezone List object.
            </summary>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Product">
            <summary>
            Contains all the methods that allow you to interact with the Parature Product module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.Schema(ParatureSDK.ParaCredentials)">
            <summary>
            Provides the Schema of the Product module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.SchemaWithCustomFieldTypes(ParatureSDK.ParaCredentials)">
            <summary>
            Gets an empty object with the scheam (custom fields, if any).  This call will also try to create a dummy
            record in order to determine if any of the custom fields have special validation rules (e.g. email, phone, url)
            and set the "dataType" of the custom field accordingly.
            </summary> 
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.Delete(System.Int64,ParatureSDK.ParaCredentials,System.Boolean)">
             <summary>
             Provides the capability to delete a Product.
             </summary>
             <param name="Productid">
             The id of the Product to delete
             </param>
             <param name="purge">
             If purge is set to true, the Product will be permanently deleted. Otherwise, it will just be 
             moved to the trash bin, so it will still be able to be restored from the service desk.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.Insert(ParatureSDK.ParaObjects.Product,ParatureSDK.ParaCredentials)">
            <summary>
            Creates a Parature Product. Requires an Object and a credentials object. Will return the Newly Created Productid. Returns 0 if the Product creation failed.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.Update(ParatureSDK.ParaObjects.Product,ParatureSDK.ParaCredentials)">
            <summary>
            Updates a Parature Product. Requires an Object and a credentials object.  Will return the updated Productid. Returns 0 if the Product update operation failed.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.GetDetails(System.Int64,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
             <summary>
             Returns a Product object with all the properties of a Product.
             </summary>
             <param name="Productid">
            The Product number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="RequestDepth">
             Sets how deep should this call parse through related modules linked to the product you are calling.
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Product object with all of its properties filled.
             </summary>
             <param name="Productid">
             The Product number that you would like to get the details of. 
             Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an product object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="ProductXML">
            The Product XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an product list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="ProductListXML">
            The Product List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery)">
            <summary>
            Provides you with the capability to list Products, following criteria you would set
            by instantiating a ModuleQuery.ProductQuery object
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list Products, following criteria you would set
            by instantiating a ModuleQuery.ProductQuery object.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Returns the list of the first 25 Products returned by the API.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>            
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Returns the list of the first 25 Products returned by the API.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.FillList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Fills an Customer list object.
            </summary>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Product.ProductFolder">
            <summary>
            Contains all the methods needed to work with the download module's folders.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.ProductFolder.FolderGetIdByName(System.String,System.Boolean,ParatureSDK.ParaCredentials)">
            <summary>
            Locates a folder with the name provided, will return the id if found. Otherwise, it will return 0.
            </summary>
            <param name="FolderName">
            The name of the folder you are looking for.
            </param>                
            <param name="IgnoreCase">
            Whether or not this methods needs to ignore case when looking for the folder name or not.
            </param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.ProductFolder.FolderGetIdByName(System.String,System.Boolean,ParatureSDK.ParaCredentials,System.Int64)">
            <summary>
            Locates a folder with the name provided and which has the parent folder of your choice, will return the id if found. Otherwise, it will return 0.
            </summary>
            <param name="FolderName">
            The name of the folder you are looking for.
            </param>                
            <param name="IgnoreCase">
            Whether or not this methods needs to ignore case when looking for the folder name or not.
            </param>
            <param name="ParentFolderId">
            The parent folder under which to look for a folder by name.
            </param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.ProductFolder.Insert(ParatureSDK.ParaObjects.ProductFolder,ParatureSDK.ParaCredentials)">
            <summary>
            Creates a Parature Download Folder. Requires an Object and a credentials object. Will return the Newly Created Downloadid. Returns 0 if the Customer creation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.ProductFolder.Update(ParatureSDK.ParaObjects.ProductFolder,ParatureSDK.ParaCredentials)">
            <summary>
            Updates a Parature Product Folder. Requires an Object and a credentials object.  Will return the updated ProductFolderid. Returns 0 if the update operation failed.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.ProductFolder.GetDetails(System.Int64,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
             <summary>
             Returns a ProductFolder object with all the properties filled.
             </summary>
             <param name="ProductFolderid">
            The Download number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="ParaCredentials">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="RequestDepth">
             For a simple Download request, please put 0. <br/>When Requesting a Download, there might be related objects linked to that Download: such as Products, etc. <br/>With a regular Download detail call, generally only the ID and names of the second level objects are loaded. 
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.ProductFolder.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an productFolder object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="ProductFolderXML">
            The ProductFolder XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.ProductFolder.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Provides you with the capability to list Product Folders
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.ProductFolder.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.ProductFolderQuery)">
            <summary>
            Provides you with the capability to list Downloads, following criteria you would set
            by instantiating a ModuleQuery.DownloadQuery object
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.ProductFolder.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.ProductFolderQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list Downloads, following criteria you would set
            by instantiating a ModuleQuery.DownloadQuery object.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.ProductFolder.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an productFolder list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="ProductFolderListXML">
            The ProductFolder List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Product.ProductFolder.FillList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.ProductFolderQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Fills a ProductFolderList object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiUtils.ActionRun(System.Int64,ParatureSDK.ParaObjects.Action,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule)">
            <summary>
            Internal Method to run an Action, independently from the module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiUtils.UploadFile(ParatureSDK.ParaEnums.ParatureModule,ParatureSDK.ParaCredentials,System.String,System.String,System.String)">
            <summary>
            Internal method to handle the upload of a file to Parature.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiUtils.UploadFile(ParatureSDK.ParaEnums.ParatureModule,ParatureSDK.ParaCredentials,System.Byte[],System.String,System.String)">
            <summary>
            Internal method to handle the upload of a file to Parature.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiUtils.RemoveStaticFieldsNodes(System.Xml.XmlDocument)">
            <summary>
            Remove the static fields, which screw up the deserializer when fetching the schema
            </summary>
            <param name="xmlReceived"></param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.ApiUtils.FillList``1(ParatureSDK.ParaCredentials,ParatureSDK.ParaQuery,ParatureSDK.ParaEnums.ParatureEntity,ParatureSDK.ParaEnums.ParatureModule)">
            <summary>
            Fills a Role list object
            </summary>
            <param name="paraCredentials"></param>
            <param name="query"></param>
            <param name="module"></param>
            <returns></returns>
        </member>
        <member name="T:ParatureSDK.ApiHandler.Ticket">
            <summary>
            Contains all the methods that allow you to interact with the Parature Ticket module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.Schema(ParatureSDK.ParaCredentials)">
            <summary>
            Provides the Schema of the Ticket module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.SchemaWithCustomFieldTypes(ParatureSDK.ParaCredentials)">
            <summary>
            Gets an empty object with the scheam (custom fields, if any).  This call will also try to create a dummy
            record in order to determine if any of the custom fields have special validation rules (e.g. email, phone, url)
            and set the "dataType" of the custom field accordingly.
            </summary> 
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.Insert(ParatureSDK.ParaObjects.Ticket,ParatureSDK.ParaCredentials)">
            <summary>
            Creates a Parature Ticket. Requires an Object and a credentials object. Will return the Newly Created Customerid. Returns 0 if the Customer creation fails.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.Update(ParatureSDK.ParaObjects.Ticket,ParatureSDK.ParaCredentials)">
            <summary>
            Updates a Parature Ticket. Requires an Object and a credentials object.  Will return the updated ticketId. Returns 0 if the Customer update operation failed.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.Delete(System.Int64,ParatureSDK.ParaCredentials,System.Boolean)">
             <summary>
             Provides the capability to delete a Ticket.
             </summary>
             <param name="ticketId">
             The id of the Ticket to delete
             </param>
             <param name="purge">
             If purge is set to true, the ticket will be permanently deleted. Otherwise, it will just be 
             moved to the trash bin, so it will still be able to be restored from the service desk.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.GetDetails(System.Int64,System.Boolean,ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
             <summary>
             Returns a Ticket object with all the properties of an customer.
             </summary>
             <param name="ticketNumber">
            The Ticket number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="includeHistory">
             Indicates whether or not to return the Ticket action history. Please keep in mind that the action history for certain tickets 
             can be very large, and therefore might slow down the operation.
             </param>
             <param name="pc">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <param name="requestDepth">
             For a simple Ticket request, please put 0. <br/>When Requesting a Ticket, there might be related objects linked to that Ticket: such as Customer, AssignedToCsr, etc. <br/>With a regular Ticket detail call, generally only the ID and names of the extra objects are loaded. 
             <example>For example, the call will return a Ticket.Customer object, but only the Name and ID values will be filled. All of the other properties of the Customer object will be empty. If you select RequestDepth=1, then we will go one level deeper into our request and will therefore retrieve the Customer's detail for you. Customers might be part of an account, so if you select RequestDepth=2, we will go to an even deeper level and return the full account object with all of its properties, etc.<br/> Please make sure you only request the depth you need, as this might make your request slower. </example>
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.GetDetails(System.Int64,System.Boolean,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Ticket object with all of its details.
             </summary>
             <param name="includeHistory">
             Indicates whether or not to return the Ticket action history. Please keep in mind that the action history for certain tickets 
             can be very large, and therefore might slow down the operation.
             </param> 
             <param name="ticketNumber">
            The Ticket number that you would like to get the details of. 
            Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="pc">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an ticket object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="ticketXml">
            The Ticket XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an ticket list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="ticketListXml">
            The Ticket List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list the 25 first Tickets returned by the APIs.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.GetList(ParatureSDK.ParaCredentials)">
            <summary>
            Provides you with the capability to list Tickets. This will only list the first 25 tickets returned by the Api.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery)">
            <summary>
            Provides you with the capability to list Tickets, following criteria you would set
            by instantiating a ModuleQuery.CustomerQuery object
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.GetList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Provides you with the capability to list Tickets, following criteria you would set
            by instantiating a ModuleQuery.TicketQuery object.
            Provides with the capability to pull extra data, by setting the proper request depth. Please be aware that 
            this might considerably slow your request, due to the high volume of API calls needed, in case you require more than 
            the standard field depth.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.FillList(ParatureSDK.ParaCredentials,ParatureSDK.ModuleQuery.ParaEntityQuery,ParatureSDK.ParaEnums.RequestDepth)">
            <summary>
            Fills an Ticket list object.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.ActionRun(System.Int64,ParatureSDK.ParaObjects.Action,ParatureSDK.ParaCredentials)">
            <summary>
            Assigns a Ticket to a specific Queue.
            </summary>
            <param name="ticketId">
            The Ticket you would like to run this action on.
            </param>
            <param name="action">
            The action object your would like to run on this ticket.
            </param>
            <param name="pc">
            Your credentials object.
            </param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.Status.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a Status object with all of its properties filled.
             </summary>
             <param name="id">
             The Status number that you would like to get the details of.
             Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="creds">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.Status.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an Status object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="xml">
            The Status XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.Status.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an Status list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="listXml">
            The Status List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.Status.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.StatusQuery)">
            <summary>
            Get the List of Statuss from within your Parature license
            </summary>
            <param name="creds"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.View.GetDetails(System.Int64,ParatureSDK.ParaCredentials)">
             <summary>
             Returns a view object with all of its properties filled.
             </summary>
             <param name="id">
             The view number that you would like to get the details of.
             Value Type: <see cref="T:System.Int64"/>   (System.Int64)
            </param>
             <param name="creds">
             The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
             </param>
             <returns></returns>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.View.GetDetails(System.Xml.XmlDocument)">
            <summary>
            Returns an view object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="xml">
            The view XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.View.GetList(System.Xml.XmlDocument)">
            <summary>
            Returns an view list object from a XML Document. No calls to the APIs are made when calling this method.
            </summary>
            <param name="listXml">
            The view List XML, is should follow the exact template of the XML returned by the Parature APIs.
            </param>
        </member>
        <member name="M:ParatureSDK.ApiHandler.Ticket.View.GetList(ParatureSDK.ParaCredentials,ParatureSDK.EntityQuery.ViewQuery)">
            <summary>
            Get the List of views from within your Parature license
            </summary>
            <param name="creds"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:ParatureSDK.ApiRequestSettings">
            <summary>
            Global settings for API requests. Runs across EACH API request made.
            </summary>
        </member>
        <member name="F:ParatureSDK.ApiRequestSettings.GlobalPreRequest">
            <summary>
            Delegate to modify the HttpWebRequest object on each request.
            Useful to specify a proxy, timeouts, certificates, or any other part of the object.
            Use at your own risk.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiUrlBuilder.ApiObjectCustomUrl(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule,System.String)">
            <summary>
            Build the API URL to call, Add a simple customString to be appended at the end of the call. Used for special instances, like requesting an upload URL.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiUrlBuilder.ApiObjectUrl(ParatureSDK.ParaCredentials,System.String,System.Int64,System.Boolean)">
            <summary>
            Build the API URL to call. Since a simple read (without any further options) is the same as an update, as well as a delete, this method will generate that same link for these operations. Also, indicates whether you are requesting a schema a link, or an actual operation link
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiUrlBuilder.ApiObjectUrl(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureEntity,System.Int64,System.Boolean)">
            <summary>
            Build the API URL to call. Since a simple read (without any further options) is the same as an update, as well as a delete, this method will generate that same link for these operations. Also, indicates whether you are requesting a schema a link, or an actual operation link
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiUrlBuilder.ApiObjectUrl(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureEntity,System.Int64,System.Collections.ArrayList)">
            <summary>
            Build the API URL to call. Since a simple read (without any further options) is the same as an update, as well as a delete, this method will generate that same link for these operations. Also, indicates whether you are requesting a schema a link, or an actual operation link
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiUrlBuilder.ApiObjectUrl(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule,System.Int64,System.Collections.ArrayList)">
            <summary>
            Build the API URL to call. Since a simple read (without any further options) is the same as an update, as well as a delete, this method will generate that same link for these operations. This methods accepts a list of extra arguments to pass to the API url through the query string.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiUrlBuilder.ApiBuildBasicUrl(ParatureSDK.ParaCredentials)">
            <summary>
            Build the basic link to the APIs. This link is independant from what you will be doing with the APIs.
            </summary>
        </member>
        <member name="M:ParatureSDK.ApiUrlBuilder.ApiToken(ParatureSDK.ParaCredentials)">
            <summary>
            Simply returns the token query string that needs to be attached to the API URL. Will return something like: _token_=xxxx
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaQuery.AddSortOrder(System.String,ParatureSDK.ParaEnums.QuerySortBy)">
            <summary>
            Add a sort order to the Query, based on a static field.
            </summary>
            <param name="fieldName">
            the field name to passe would be the exact name of the field in the object properties.
            For example, if you have a property "Ticket.Date_Created", you will need to pass "Date_Created".
            </param>
            <param name="sortDirection"></param>              
        </member>
        <member name="F:ParatureSDK.ParaQuery.MinimalisticLoad">
            <summary>
            When loading records under a minimalistic request, only field options that are selected are loaded. Other information (like "enable") is not parsed.
            </summary>        
        </member>
        <member name="M:ParatureSDK.ParaQuery.AddStaticFieldFilter(System.String,ParatureSDK.ParaEnums.QueryCriteria,System.String)">
            <summary>
            Adds a static field based filter to the query. 
            Static field filters are actually general properties that will be independant from static fields.
            You can use them this filter by passing the Read Only Static Property of the object you are using.
            You will find all these properties in ModuleQuery>ObjectQuery>ObjectStaticFields, where object is
            the name of the module you are accessing.
            </summary>
            <param name="staticFieldProperty">
            these properties in ModuleQuery>ObjectQuery>ObjectStaticFields, where object is
            the name of the module you are accessing.
            </param>
            <param name="criteria">
            The criteria you would like to apply to this static field.
            </param>
            <param name="value">
            The value you would like the static field to have, for this filter.
            </param>
        </member>
        <member name="M:ParatureSDK.ParaQuery.AddStaticFieldInListFilter(System.String,ParatureSDK.ParaEnums.QueryCriteria,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Filter by static field with multiple values. Query acts like a union of all provided values.
            </summary>
            <param name="staticFieldProperty">The static field to filter against</param>
            <param name="criteria">The query criteria</param>
            <param name="values">The list of possible values</param>
        </member>
        <member name="M:ParatureSDK.ParaQuery.AddStaticFieldFilter(System.String,ParatureSDK.ParaEnums.QueryCriteria,System.DateTime)">
            <summary>
            Adds a static field based filter to the query. 
            Static field filters are actually general properties that will be independant from static fields.
            You can use them this filter by passing the Read Only Static Property of the object you are using.
            You will find all these properties in ModuleQuery>ObjectQuery>ObjectStaticFields, where object is
            the name of the module you are accessing.
            </summary>
            <param name="staticFieldProperty">
            these properties in ModuleQuery>ObjectQuery>ObjectStaticFields, where object is
            the name of the module you are accessing.
            </param>
            <param name="criteria">
            The criteria you would like to apply to this static field.
            </param>
            <param name="value">
            The DateTime value you would like the static field to have, for this filter.
            </param>
        </member>
        <member name="M:ParatureSDK.ParaQuery.AddStaticFieldFilter(System.String,ParatureSDK.ParaEnums.QueryCriteria,System.Boolean)">
            <summary>
            Adds a static field based filter to the query. Use this method only if you are dealing with a bool custom field (like a checkbox)
            Static field filters are actually general properties that will be independant from static fields.
            You can use them this filter by passing the Read Only Static Property of the object you are using.
            You will find all these properties in ModuleQuery>ObjectQuery>ObjectStaticFields, where object is
            the name of the module you are accessing.
            </summary>
            <param name="staticFieldProperty">
            these properties in ModuleQuery>ObjectQuery>ObjectStaticFields, where object is
            the name of the module you are accessing.
            </param>
            <param name="criteria">
            The criteria you would like to apply to this static field.
            </param>
            <param name="value">
            The bool value you would like the static field to have, for this filter.
            </param>
        </member>
        <member name="M:ParatureSDK.ParaQuery.AddStaticFieldFilter(System.String,ParatureSDK.ParaEnums.FieldValueFilter)">
            <summary>
            Filter by static field for NULL or NOT NULL
            </summary>
            <param name="staticFieldProperty">Static field name</param>
            <param name="fieldFilter">Filter type</param>
        </member>
        <member name="M:ParatureSDK.ParaQuery.AddCustomFieldFilter(System.String,ParatureSDK.ParaEnums.QueryCriteria,System.DateTime)">
            <summary>
            Adds a static field based filter to the query. Use this method only if you are dealing with a bool custom field (like a checkbox)
            Static field filters are actually general properties that will be independant from static fields.
            You can use them this filter by passing the Read Only Static Property of the object you are using.
            You will find all these properties in ModuleQuery>ObjectQuery>ObjectStaticFields, where object is
            the name of the module you are accessing.
            </summary>
            <param name="staticFieldProperty">
            these properties in ModuleQuery>ObjectQuery>ObjectStaticFields, where object is
            the name of the module you are accessing.
            </param>
            <param name="criteria">
            The criteria you would like to apply to this static field.
            </param>
            <param name="value">
            The Date you would like to base your filter off. ParaConnect will manage the date formatting part.
            </param>        
        </member>
        <member name="M:ParatureSDK.ParaQuery.AddCustomFilter(System.String)">
            <summary>
            This method allows you to inject an extra query parameter in the URL being called by our APIs.
            Using this method implies a very good knowledge of the underlying Parature API structure, as well as ParaConnect's inner workings and might break the API call.
            </summary>       
        </member>
        <member name="M:ParatureSDK.ParaQuery.BuildParaQueryArguments">
            <summary>
            Provides the string array of all dynamic filtering and fields to include that will be further processed
            by the module specific object passed to the APIs, to include statis filtering.
            </summary>
            <summary>
            Builds the query arguments.
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaQuery.QueryElementsRemoveDuplicate(ParatureSDK.ParaQuery.QueryElement)">
            <summary>
            Before adding a query element, making sure that no duplicates is there.
            </summary>
            <param name="QueryName"></param>
        </member>
        <member name="M:ParatureSDK.ParaQuery.ArrayCheckAndDeleteRecord(System.Collections.ArrayList,System.String)">
            <summary>
            Checking if a record exists, and deleting it if it did.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaQuery.OptimizePageSizeTestCalls">
            <summary>
            Number of test calls to be used for the optimization calculation.
            Suggested range, 3 to 10.  In practice 3 has been sufficient to 
            active approximately 75% optimization. Default value: 3.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaQuery.OptimizePageSizeSeed">
            <summary>
            The initial page size to be used when optimizing.  All subsequent calls are calculations.
            No custom fields, 150 is suggested.
            More than 5 custom fields, 50 is suggested.
            Default value: 50
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaQuery.OptimizePageSize">
            <summary>
            Page Size Optimization will make a series of test calls and attempt to calculate the optimum page size.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaQuery.OptimizeCalls">
            <summary>
            Enable Parallel Calls
            Parature's API can't handle parallel calls at this time
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaQuery.TotalOnly">
            <summary>
            If you set this property to "True", only the total number of items meeting your query is returned. There will be no objects returned.
            </summary>        
        </member>
        <member name="P:ParatureSDK.ParaQuery.PageNumber">
            <summary>
            The number of the page you would like to request, first page should have the number 1 (which is the default value).
            </summary>       
        </member>
        <member name="P:ParatureSDK.ParaQuery.PageSize">
            <summary>
            The number of records to return per page. Default is 25 (maximum is 500)
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaQuery.RetrieveAllRecords">
            <summary>
            If you set this property to "True", ParaConnect will perform the appropriate number of calls to 
            retrieve all the data matching your request. Please note that the "PageSize" property will be ignored 
            since Paraconnect will manage the size of the page to call.
            CAUTION: This property might call a large amount of data and therefore be slow to respond, in addition to the pressure it 
            puts on Parature servers.
            </summary>        
        </member>
        <member name="P:ParatureSDK.ParaQuery.OutputFormat">
            <summary>
            The format you would like to get the results in. Leave as native for most cases, unless you specifically
            need an html or RSS format.
            </summary>
        </member>
        <member name="T:ParatureSDK.EntityQuery.ArticleFolderQuery.ArticleFolderStaticFields">
            <summary>
            Contains all the static properties you will need when filtering by static fields.
            </summary>
        </member>
        <member name="T:ParatureSDK.EntityQuery.DownloadFolderQuery.DownloadFolderStaticFields">
            <summary>
            Contains all the static properties you will need when filtering by static fields.
            </summary>
        </member>
        <member name="F:ParatureSDK.EntityQuery.DownloadFolderQuery.DownloadFolderStaticFields.DateUpdated">
            <summary>
            Use this property to filter by the Date Modified property of the DownloadFolder.
            </summary>
        </member>
        <member name="F:ParatureSDK.EntityQuery.DownloadFolderQuery.DownloadFolderStaticFields.ParentFolder">
            <summary>
            The id of the parent folder.
            </summary>
        </member>
        <member name="T:ParatureSDK.EntityQuery.ProductFolderQuery.ProductFolderStaticFields">
            <summary>
            Contains all the static properties you will need when filtering by static fields.
            </summary>
        </member>
        <member name="F:ParatureSDK.EntityQuery.ProductFolderQuery.ProductFolderStaticFields.DateUpdated">
            <summary>
            Use this property to filter by the Date Modified property of the ProductFolder.
            </summary>
        </member>
        <member name="F:ParatureSDK.EntityQuery.ProductFolderQuery.ProductFolderStaticFields.ParentFolder">
            <summary>
            The id of the parent folder.
            </summary>
        </member>
        <member name="T:ParatureSDK.Fields.CustomField">
            <summary>
            A custom field class is specific to each module.
            </summary>
        </member>
        <member name="F:ParatureSDK.Fields.Field.Editable">
            <summary>
            this indicates whether the field is editable or read only. 
            If it is a read only, inluding it in an update will not result in that field value being updated.
            </summary>
        </member>
        <member name="F:ParatureSDK.Fields.Field.Value">
            <summary>
            This Value will be populated with the field's value. 
            For example, if this is a textbox field, this will hold the textbox's default field.
            </summary>
        </member>
        <member name="M:ParatureSDK.Fields.Field.GetFieldValue``1">
            <summary>
            Retrieve the value of this field, typecast to the provided type.
            </summary>
            <typeparam name="T">Type of the value</typeparam>
            <returns>Value of the field, or the default of the Type if the Value is null</returns>
            <exception cref="T:System.InvalidCastException">Thrown if the type provided is incorrect</exception>
        </member>
        <member name="F:ParatureSDK.Fields.CustomField.Id">
            <summary>
            The internal ID of the field
            </summary>
        </member>
        <member name="F:ParatureSDK.Fields.CustomField.Options">
            <summary>
            If this is a custom field that holds multiple options, this collection of CustomFieldOptions will be populated.
            </summary>
        </member>
        <member name="P:ParatureSDK.Fields.CustomField.Value">
            <summary>
            Value of the Custom field. Can be integer, string, text, or date/time values
            </summary>
        </member>
        <member name="T:ParatureSDK.Fields.FieldOption">
            <summary>
            A field option is actually one of the possible values a custom field can take. So this can be an option in a dropdown, or a checkbox in a CheckBoxList field.
            </summary>
        </member>
        <member name="F:ParatureSDK.Fields.FieldOption.Enables">
            <summary>
            With regards to Field Dependencies:
            Pseudo-URI for the field that gets displayed by enabling this field. 
            </summary>
        </member>
        <member name="T:ParatureSDK.Fields.DependantCustomFields">
            <summary>
            Holds the list of dependant field IDs, as well as the field options contained within it.
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.AccountQuery">
            <summary>
            Instantiate this class to build all the properties needed to get a list of Accounts.
            The properties include the number of items per page, the page number, what custom fields to include in the list,
            as well as any filtering you need to do.
            </summary>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.AddCustomFieldFilter(System.Int64,ParatureSDK.ParaEnums.QueryCriteria,System.DateTime)">
            <summary>
            Adds a custom field based filter to the query. Use this method for Custom Fields that are date based. 
            </summary>
            <param name="customFieldId">
            The id of the custom field you would like to filter your query on.
            </param>
            <param name="criteria">
            The criteria you would like to apply to this custom field
            </param>
            <param name="value">
            The Date you would like to base your filter off.
            </param>        
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.AddCustomFieldFilter(System.Int64,ParatureSDK.ParaEnums.QueryCriteria,System.String)">
            <summary>
            Adds a custom field based filter to the query. Use this method for Custom Fields that are NOT multi values. 
            </summary>
            <param name="customFieldId">
            The id of the custom field you would like to filter your query on.
            </param>
            <param name="criteria">
            The criteria you would like to apply to this custom field
            </param>
            <param name="value">
            The value you would like the custom field to have, for this filter.
            </param>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.AddCustomFieldInListFilter(System.Int64,ParatureSDK.ParaEnums.QueryCriteria,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add a custom field filter to the query for multiple values. Does not work for boolean field types. Query acts like a union of all provided values.
            </summary>
            <param name="customFieldId">The id of the custom field to query on</param>
            <param name="criteria">The query criteria</param>
            <param name="values">The list of possible values</param>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.AddCustomFieldFilter(System.Int64,ParatureSDK.ParaEnums.QueryCriteria,System.Boolean)">
            <summary>
            Adds a custom field based filter to the query. Use this method for Custom Fields that are NOT multi values. 
            </summary>
            <param name="customFieldId">
            The id of the custom field you would like to filter your query on.
            </param>
            <param name="criteria">
            The criteria you would like to apply to this custom field
            </param>
            <param name="value">
            The value you would like the custom field to have, for this filter.
            </param>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.AddCustomFieldFilter(System.Int64,ParatureSDK.ParaEnums.QueryCriteria,System.Int64[])">
            <summary>
            Adds a custom field based filter to the query. Use this method for Custom Fields that are multi values (dropdown, radio buttons, etc). 
            </summary>
            <param name="customFieldId">
            The id of the multi value custom field you would like to filter your query on.
            </param>
            <param name="criteria">
            The criteria you would like to apply to this custom field
            </param>
            <param name="customFieldOptionId">
            The list of all custom field options (for the customFieldID you specified) that need to be selected for an item to qualify to be returned when you run your query.
            </param>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.AddCustomFieldFilter(System.Int64,ParatureSDK.ParaEnums.QueryCriteria,System.Int64)">
            <summary>
            Adds a custom field based filter to the query. Use this method for Custom Fields that are multi values (dropdown, radio buttons, etc).
            </summary>
            <param name="customFieldId">
            The id of the multi value custom field you would like to filter your query on.
            </param>
            <param name="criteria">
            The criteria you would like to apply to this custom field
            </param>
            <param name="customFieldOptionId">
            The custom field option (for the customFieldID you specified) that need to be selected for an item to qualify to be returned when you run your query.
            </param>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.AddCustomFieldFilter(System.Int64,ParatureSDK.ParaEnums.FieldValueFilter)">
            <summary>
            Add a custom field filter for NULL or NOT NULL. Use with any custom fields
            </summary>
            <param name="customFieldId">
            The id of the multi value custom field you would like to filter your query on.
            </param>
            <param name="fieldFilter">Null or Not Null filter</param>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.IncludeCustomField(System.Int64)">
            <summary>
            Add a custom field to the query returned returned 
            </summary>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.IncludeCustomField(System.Collections.Generic.IEnumerable{ParatureSDK.Fields.CustomField})">
            <summary>
            Include all the custom fields, included in the collection passed to this method, 
            to the api call. These custom fields will be returned with the objects receiveds from the APIs.
            This is very useful if you have a schema objects and would like to query with all custom fields returned.
            </summary>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.IncludedFieldsCheckAndDeleteRecord(System.String)">
            <summary>
            Checking if a record exists in the _includedFields array, and delete it if it did.
            </summary>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.BuildQueryArguments">
            <summary>
            Provides the string array of all dynamic filtering and fields to include that will be further processed
            by the module specific object passed to the APIs, to include statis filtering.
            </summary>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.BuildCustomFieldQueryArguments">
            <summary>
            Build all related query arguments related to custom fields.
            </summary>
        </member>
        <member name="M:ParatureSDK.ModuleQuery.ParaEntityQuery.AddSortOrder(System.Int64,ParatureSDK.ParaEnums.QuerySortBy)">
            <summary>
            Add a sort order to the Query, based on a custom field.
            </summary>
            <param name="customFieldId">The id of the custom field you would like to filter upon.</param>
            <param name="sortDirection"></param>       
        </member>
        <member name="P:ParatureSDK.ModuleQuery.ParaEntityQuery.IncludeAllCustomFields">
            <summary>
            If you set this property to "True", ParaConnect will perform a schema call, determine the custom fields, then will make a call including all the of the objects custom fields.
            Caution: do not use the "IncludeCustomField" methods if you are setting this one to true, as the "IncludeCustomField" methods will be ignored.
            </summary>        
        </member>
        <member name="P:ParatureSDK.ModuleQuery.AccountQuery.View">
            <summary>
            The ID of the view
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.AccountQuery.AccountStaticFields">
            <summary>
            Contains all the static properties you will need when filtering by static fields.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.AccountQuery.AccountStaticFields.AccountSlaID">
            <summary>
            The criteria for this property can only be a SlaID
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.AccountQuery.AccountStaticFields.DefaultCustomerRoleID">
            <summary>
            The criteria for this property can only be a Id
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.AccountQuery.AccountStaticFields.OwnedByCsrID">
            <summary>
            The criteria for this property can only be a CsrID
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.AccountQuery.AccountStaticFields.ModifiedByCsrID">
            <summary>
            The criteria for this property can only be a CsrID
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.AccountQuery.AccountStaticFields.AccountProducts">
            <summary>
            In certain configurations, Accounts might be associated to products.
            In that case, you can filter by certain product IDs.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.AccountQuery.AccountStaticFields.ViewableAccountid">
            <summary>
            In certain configurations, certain customers from an account can see tickets belonging
            to other accounts. You can filter by this field by entering the 
            account(s) id(s) (comma separated ids, in case you are entering multiple ids).
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.ArticleQuery">
            <summary>
            Instantiate this class to build all the properties needed to get a list of Articles.
            The properties include the number of items per page, the page number, what custom fields to include in the list,
            as well as any filtering you need to do.
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.ArticleQuery.ArticleStaticFields">
            <summary>
            Contains all the static properties you will need when filtering by static fields.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.ArticleQuery.ArticleStaticFields.DateCreated">
            <summary>
            Use this property to filter by the date created property of an Article.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.ArticleQuery.ArticleStaticFields.RelatedArticles">
            <summary>
            Returns all Articles related to the given Articles.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.ArticleQuery.ArticleStaticFields.Keywords">
            <summary>
            The terms to search for in the Article's Question, Alternate Question, or Answer. Encode spaces in terms with the plus sign +. Keyword search can only be used in conjuction with the following filters: Folders_id_, Products_id_, Published=true, _searchoption_, _search_subfolders_
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.ArticleQuery.ArticleStaticFields.SearchOption">
            <summary>
            Specifies how to search. Default is allwords
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.ArticleQuery.ArticleStaticFields.SearchSubfolders">
            <summary>
            Controls if articles in subfolders will be searched
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.ArticleQuery.ArticleStaticFields.Status">
            <summary>
            Status of the article: 'active', 'all', or 'trashed'. Default is 'active'
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.AssetQuery">
            <summary>
            Instantiate this class to build all the properties needed to get a list of Assets.
            The properties include the number of items per page, the page number, what custom fields to include in the list,
            as well as any filtering you need to do.
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.ChatQuery">
            <summary>
            Instantiate this class to build all the properties needed to get a list of Chats.
            The properties include the number of items per page, the page number, what custom fields to include in the list,
            as well as any filtering you need to do.
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.ChatQuery.ChatStaticFields">
            <summary>
            Contains all the static properties you will need when filtering by static fields.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.ChatQuery.ChatStaticFields.Browser_Language">
            <summary>
            Use this property to filter by the date created property of an Article.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CsrQuery.CsrStaticFields.DateCreated">
            <summary>
            Use this property to filter by the date created property of an Article.
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.CustomerQuery">
            <summary>
            Instantiate this class to build all the properties needed to get a list of Customers.
            The properties include the number of items per page, the page number, what custom fields to include in the list,
            as well as any filtering you need to do.
            </summary>
        </member>
        <member name="P:ParatureSDK.ModuleQuery.CustomerQuery.View">
            <summary>
            The ID of the view
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields">
            <summary>
            Contains all the static properties you will need when filtering by static fields.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.DateCreated">
            <summary>
            Use this property to filter by the date created property of a customer.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.DateUpdated">
            <summary>
            Use this property to filter by the date updated property of a customer.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.DateVisited">
            <summary>
            Use this property to filter by the date created property of a customer.Visited
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.User_Name">
            <summary>
            To search by customer User Name.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.CustomerEmail">
            <summary>
            To search by customer Email.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.FirstName">
            <summary>
            Search by customer First Name
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.LastName">
            <summary>
            Search by customer Last Name
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.AccountID">
            <summary>
            Filter by the accountid of the customers being returned. 
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.CustomerSla">
            <summary>
            To filter by Customers' SLAs
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.CustomerRoleID">
            <summary>
            To filter by Customers' Roles
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.Status">
            <summary>
            To filter by the status field. 
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.CustomerProducts">
            <summary>
            In certain configurations, customers might be associated to products.
            In that case, you can filter by certain product IDs.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.CustomerQuery.CustomerStaticFields.AcceptUseOfTerm">
            <summary>
            In certain configurations, customers might have to accept the terms of use.
            If you have that configuration activated, you will be able to filter by this field.
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.DownloadQuery">
            <summary>
            Instantiate this class to build all the properties needed to get a list of Downloads.
            The properties include the number of items per page, the page number, what custom fields to include in the list,
            as well as any filtering you need to do.
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields">
            <summary>
            Contains all the static properties you will need when filtering by static fields.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.DateCreated">
            <summary>
            Use this property to filter by the date created property of a Download.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.DateUpdated">
            <summary>
            Use this property to filter by the Date Modified property of the Download.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.Description">
            <summary>
            Use this property to filter by the description of the download.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.Eula">
            <summary>
            Use this property to filter by the Eula ID of the Download, in case your configs have this feature activated.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.ExternalLink">
            <summary>
            Use this property to filter by the external link of the download.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.Folder">
            <summary>
            Use this property to filter by the id of the folder the download belongs to.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.Guid">
            <summary>
            Use this property to filter by the guid of the download file.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.name">
            <summary>
            Use this property to filter by the Name of the download.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.Permissions">
            <summary>
            Use this property to filter by one or many SLAs that are specified for this download.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.Products">
            <summary>
            Use this property to filter by the Product id of the download.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.Published">
            <summary>
            Use this property to filter by the published state of the download.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.Title">
            <summary>
            Use this property to filter by the Title of the download.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.DownloadQuery.DownloadStaticFields.Visible">
            <summary>
            Use this property to filter by the Visibility state of the download.
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.ProductQuery">
            <summary>
            Instantiate this class to build all the properties needed to get a list of Products.
            The properties include the number of items per page, the page number, what custom fields to include in the list,
            as well as any filtering you need to do.
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.ProductQuery.ProductStaticFields">
            <summary>
            Contains all the static properties you will need when filtering by static fields.
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.TicketQuery">
            <summary>
            Instantiate this class to build all the properties needed to get a list of Tickets.
            The properties include the number of items per page, the page number, what custom fields to include in the list,
            as well as any filtering you need to do.
            </summary>
        </member>
        <member name="P:ParatureSDK.ModuleQuery.TicketQuery.Status_Type">
            <summary>
            If there is any need to limit the ticket returned to a certain status type. Default is 
            to return all.
            </summary>
        </member>
        <member name="P:ParatureSDK.ModuleQuery.TicketQuery.MyTickets">
            <summary>
            Whether to show only tickets assigned to the CSR associated with the token you are using or not.
            </summary>
        </member>
        <member name="P:ParatureSDK.ModuleQuery.TicketQuery.View">
            <summary>
            The ID of the view
            </summary>
        </member>
        <member name="T:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields">
            <summary>
            Contains all the static properties you will need when filtering by static fields.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Date_Created">
            <summary>
            Use this property to filter by the date created property of a ticket.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Ticket_Account">
            <summary>
            Allows for filtering through the Account of the Customer that currently owns the ticket.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Ticket_Department">
            <summary>
            Provide filtering with the department id of the tickets you would like to list.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Date_Updated">
            <summary>
            Use this property to filter by the date created property of a ticket.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Assigned_To">
            <summary>
            Filter by the "Assigned To" Csr ID. 
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.additional_contact_account_id">
            <summary>
            Filter by the "additional_contact_account_id_". 
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.additional_contact_id">
            <summary>
            Filter by the "additional_contact_id_". 
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Additional_Contact_Account">
            <summary>
            Filter by the "Additional Contact's Account" ID. 
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Cc_Csr">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.CC_Customer">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Email_Notification">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Hide_From_Customer">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Customer">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Additional_Contact">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Ticket_Queue">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Entered_By">
            <summary>
            Filter by the created by CSR id.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Ticket_Parent">
            <summary>
            Tickets that have a specific ticket parentid.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Status">
            <summary>
            Tickets that have a specific ticket status.
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Account">
            <summary>
            Tickets owned by Customers who belong to the specific Account
            </summary>
        </member>
        <member name="F:ParatureSDK.ModuleQuery.TicketQuery.TicketStaticFields.Asset">
            <summary>
            Tickets associated to a specific Asset
            </summary>
        </member>
        <member name="T:ParatureSDK.PagedData.PagedData">
            <summary>
            Designed to provide properties for paged results.
            </summary>
        </member>
        <member name="F:ParatureSDK.PagedData.PagedData.TotalItems">
            <summary>
            Total number of items that matched your request
            </summary>
        </member>
        <member name="F:ParatureSDK.PagedData.PagedData.ResultsReturned">
            <summary>
            The number of items returned with the current call.
            </summary>
        </member>
        <member name="F:ParatureSDK.PagedData.PagedData.PageSize">
            <summary>
            The maximum number of items returned per call.
            </summary>
        </member>
        <member name="F:ParatureSDK.PagedData.PagedData.PageNumber">
            <summary>
            Number of this page
            </summary>
        </member>
        <member name="F:ParatureSDK.PagedData.PagedData.ApiCallResponse">
            <summary>
            Contains all the information regarding the API Call that was made.
            </summary>
        </member>
        <member name="M:ParatureSDK.PagedData.PagedData.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ParatureSDK.PagedData.PagedData.#ctor(ParatureSDK.PagedData.PagedData)">
            <summary>
            
            </summary>
            <param name="pagedData"></param>
        </member>
        <member name="T:ParatureSDK.ParaCredentials">
            <summary>
            The Parature Credentials class is used to hold the standard login information. It is very useful to have it instantiated only once, with the proper information, and then pass this class to the different methods that need it.
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaCredentials.#ctor(System.String,System.String,ParatureSDK.ParaEnums.ApiVersion,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Object used to connect to a Parature Instance
            </summary>
            <param name="token">API Token</param>
            <param name="serverfarmaddress">Address of your severfarm. Include https://. Ex: https://demo.parature.com</param>
            <param name="apiversion">Version of the API</param>
            <param name="instanceid">Instance ID</param>
            <param name="departmentid">Department ID</param>
            <param name="enforceRequiredFields">Whether to enforce required custom fields or not</param>
        </member>
        <member name="M:ParatureSDK.ParaCredentials.SetCredentials(System.String,System.String,ParatureSDK.ParaEnums.ApiVersion,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Internal method to set required credential
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaCredentials.PrevalidateCalls">
            <summary>
            Indicates whether to pre-validate an API call before it occues or not.
            Will only check that required static fields are provided.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaCredentials.Token">
            <summary>
            A valid security token for the CSR account to use to perform the API operations
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaCredentials.ServerfarmAddress">
            <summary>
            A read only value of the server farm's physical address.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaCredentials.Apiversion">
            <summary>
            The version of the API being used.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaCredentials.Instanceid">
            <summary>
            Numeric value of the Instance being used.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaCredentials.Departmentid">
            <summary>
            Numeric value of the department to be used.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaCredentials.EnforceRequiredFields">
            <summary>
            Enables/Disables bypass custom field validation (Dependencies and Required)
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaEnums">
            <summary>
            Paraenums contains all the available enumeration for your Parature Connector.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaEnums.QuerySortBy">
            <summary>
            This is used when using the sorting capabilities of the APIs. It helps set up the sorting direction.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaEnums.ActionHistoryPerformerType">
            <summary>
            The Type of the performer that ran the action history, it is whether a CSR or a Customer.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaEnums.QueryCriteria">
            <summary>
            List all possible criteria you can use when querying a list of objects.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.QueryCriteria.Like">
            <summary>
            Use this for string searches, where you are looking for the object's field to have a string
            like the one you are looking for.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.QueryCriteria.MoreThan">
            <summary>
            Can be used for dates, as well as numeric values. Equivalent to a ">" sign.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.QueryCriteria.LessThan">
            <summary>
            Can be used for dates, as well as numeric values.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.QueryCriteria.Equal">
            <summary>
            Can be used for dates, as well as numeric values. Equivalent to a "=" sign.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaEnums.FieldValueFilter">
            <summary>
            Use to specify if field contains or does not contain a value
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.FieldValueFilter.IsNull">
            <summary>
            Use for filtering if a field that does not contain a value
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.FieldValueFilter.IsNotNull">
            <summary>
            Use for filtering if a field contains any value
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaEnums.RequestDepth">
            <summary>
            When reading an object: Account, Ticket, Contact, etc, this enum will provide indications regarding the level of depth of the information returned.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.RequestDepth.Standard">
            <summary>
            The Standard depth will only return the id and name of the second level objects linked to the main object you are requesting. If you request a Ticket details, for example, it will also return a Contact object, but only the id and the name of the contact object will be filled. All other properties of that object will be null.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.RequestDepth.SecondLevel">
            <summary>
            The Second Level depth will go and fill all of the second level objects properties. If you request a Ticket details, for example, it will also return a Contact object with all properties filled. However, if the contact has products objects associated with it, only the product id and name of the returned product objects will be filled. All other product properties will be null.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.RequestDepth.ThirdLevel">
            <summary>
            The Third Level depth will go and fill all of the second and third level objects properties
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaEnums.ApiCallHttpMethod">
            <summary>
            Provides with the possible calls methods to the APIs.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ApiCallHttpMethod.Get">
            <summary>
            Used when getting data (read, list or schema call)
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ApiCallHttpMethod.Post">
            <summary>
            Creates an object
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ApiCallHttpMethod.Update">
            <summary>
            Updates an object
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ApiCallHttpMethod.Delete">
            <summary>
            Deletes an object
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaEnums.ParatureModule">
            <summary>
            This enum lists all the possible modules within Parature. Choose one of these values when calling a method that requires a module.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureModule.Ticket">
            <summary>
            Tickets module
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureModule.Account">
            <summary>
            Account module
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureModule.Customer">
            <summary>
            Customer module
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureModule.Download">
            <summary>
            Downloads module
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureModule.Article">
            <summary>
            Knowledge base module
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureModule.Product">
            <summary>
            Products module
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureModule.Asset">
            <summary>
            Assets module
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureModule.Csr">
            <summary>
            CSR module
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureModule.Chat">
            <summary>
            Chat Module
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaEnums.ParatureEntity">
            <summary>
            This enum lists all the possible complex entities within Parature. Choose one of these values when calling a method that requires an entity.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.ArticleFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.DownloadFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.Sla">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.ProductFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.Queue">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.Action">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.status">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.TicketStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.CsrStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.role">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.view">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.Department">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.Timezone">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ParatureEntity.CustomerStatus">
            <summary>
            
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaEnums.ApiVersion">
            <summary>
            The version of the API being used. This is mainly needed in the credentials class.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.ApiVersion.v1">
            <summary>
            version 1 
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaEnums.OutputFormat">
            <summary>
            The format you would like the output to be in.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.OutputFormat.native">
            <summary>
            Regular call, fills your objects normally. Unless you need a json or a Rss feed, please use this one.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.OutputFormat.rss">
            <summary>
            Returns an Rss
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaEnums.OutputFormat.json">
            <summary>
            Returns a json format
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaHelper.ParaEnumProvider.ApiHttpPostProvider(ParatureSDK.ParaEnums.ApiCallHttpMethod)">
            <summary>
            Returns the Http request method for an API call, requires an ApiCallHttpMethod enum.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.Account">
            <summary>
            Holds all the properties of the Account module.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.ParaEntity">
            <summary>
            Base class for all Parature Entities (Modules) retrievable via the API
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.ParaEntityBaseProperties">
            <summary>
            Provides basic shared properties among all the objects.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ParaEntityBaseProperties.Id">
            <summary>
            Id for the entity in Parature
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ParaEntityBaseProperties.FullyLoaded">
            <summary>
            Indicates whether the object is fully loaded or not. If the object is returned as a second level object, this flag will indicate whether only the id property of the object is filled, or if all the properties have been loaded.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ParaEntityBaseProperties.ApiCallResponse">
            <summary>
            Contains all the information regarding the API Call that was made.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ParaEntityBaseProperties.ServiceDeskUri">
            <summary>
            
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ParaEntityBaseProperties.Href">
            <summary>
            
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntityBaseProperties.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntityBaseProperties.DirtyStateManager(System.Boolean)">
            <summary>
            Manages the "IsDirty" flag property of the object.
            </summary>
            <param name="isModified">Input Parameter, to indicate whether a change happened to the object or not</param>
        </member>
        <member name="P:ParatureSDK.ParaObjects.ParaEntityBaseProperties.IsDirty">
            <summary>
            Indicate whether the object is dirty or not (means it needs to be updated, created or deleted).
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.GetFieldValue``1(System.String)">
            <summary>
            Retrieve the value of a specific field, typecast to the provided type.
            </summary>
            <param name="fieldName">Static Field Name</param>
            <typeparam name="T">Type of the value</typeparam>
            <returns></returns>
            <exception cref="T:System.InvalidCastException">Thrown if the type provided is incorrect</exception>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.GetFieldValue(System.Int32)">
            <summary>
            Retrieve the value of a specific field, typecast to the provided type.
            </summary> 
            <param name="fieldId">Custom Field Id</param>
            <typeparam name="T">Type of the value</typeparam>
            <exception cref="T:System.InvalidCastException">Thrown if the type provided is incorrect</exception>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ParaEntity.StaticFields">
            <summary>
            Convenience method to retrieve only static fields
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ParaEntity.CustomFields">
            <summary>
            Convenience method to retrieve only custom fields
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldReset(System.Int64)">
            <summary>
            This method accepts a custom field id and will reset all of its values: if this custom field has any options, they will be 
            all unselected. If the custom field value is not set to "", this method will set it. Basically, the field will be empty. 
            </summary>           
            <returns>Returns True if the custom field was modified, False if there was no need to modify the custom field.</returns>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldSetValue(System.Int64,System.String,System.Boolean)">
             <summary>
             Sets the value of a custom field in the fields collection of this object. If there is no custom field with the 
             id that you pass to this method, a new custom field will be created and its value will be set to the one 
             passed to this method. Set the Ignore case to indicate whether the comparison should take into account the case or not.
             </summary>
             <returns>
             returns True if the custom field was modified (or created), False if there was no need to modify the custom field.
            </returns>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldSetValue(System.Int64,System.String)">
             <summary>
             Sets the value of a custom field in the fields collection of this object. If there is no custom field with the 
             id that you pass to this method, a new custom field will be created and its value will be set to the one 
             passed to this method.
             </summary>
             <returns>
             returns True if the custom field was modified (or created), False if there was no need to modify the custom field.
            </returns>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldSetValue(System.Int64,System.Boolean)">
             <summary>
             Sets the value of a custom field in the fields collection of this object. If there is no custom field with the 
             id that you pass to this method, a new custom field will be created and its value will be set to the one 
             passed to this method.
             </summary>
             <returns>
             returns True if the custom field was modified (or created), False if there was no need to modify the custom field.
            </returns>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldSetValue(System.Int64,System.DateTime)">
             <summary>
             Sets the value of a custom field in the fields collection of this object. If there is no custom field with the 
             id that you pass to this method, a new custom field will be created and its value will be set to the one 
             passed to this method.
             </summary>
             <returns>
             returns True if the custom field was modified (or created), False if there was no need to modify the custom field.
            </returns>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldFlagToDelete(System.Int64)">
            <summary>
            Will reset the value of the custom field with id you pass to this method, and then will make 
            sure to send the custom field back with an empty value so that it deletes the value stored in Parature 
            for this custom field.
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldSetSelectedFieldOption(System.Int64,System.Int64)">
            <summary>
            Look for a custom field with the id passed and then set the selected option to the CustomFieldOptionid passed.
            If any other custom field option is selected, it will be unselected. If the option you need to select is not part 
            of the custom field options, it will add it. Finally, if a custom field with the id you are passing does not exist, it will create one 
            with the proper custom field option you need.
            </summary>          
            <returns>
            returns True if the custom field was modified (or created), False if there was no need to modify the custom field.
            </returns>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldSetSelectedFieldOption(System.Int64,System.String,System.Boolean)">
            <summary>
            Look for a custom field with the id passed and then set the selected option to the CustomFieldOption name passed.
            If any other custom field option is selected, it will be unselected. If the option you need to select is not part 
            of the custom field options, it will add it. Finally, if a custom field with the id you are passing does not exist, it will create one 
            with the proper custom field option you need.
            </summary>          
            <returns>
            returns True if the custom field was modified (or created), False if there was no need to modify the custom field.
            </returns>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldAddSelectedFieldOption(System.Int64,System.Int64)">
            <summary>
            Look for a custom field with the id passed and then set the selected option to the CustomFieldOptionid passed.
            If any other custom field option is selected, it will stay selected. If the option you need to select is not part 
            of the custom field options, it will add it. Finally, if a custom field with the id you are passing does not exist, it will create one 
            with the proper custom field option you need.
            </summary>          
            <returns>
            returns True if the custom field was modified (or created), False if there was no need to modify the custom field.
            </returns>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldAddSelectedFieldOption(System.Int64,System.String,System.Boolean)">
            <summary>
            Allows you to add an option to the selected field options already in this custom field.
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldGetSelectedOption(System.Int64)">
            <summary>
            Returns the selected custom field option object for a custom field. Will return the first encountered selected 
            field options object.
            </summary>           
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldGetSelectedOption(ParatureSDK.Fields.CustomField)">
            <summary>
            Returns the selected custom field option object for a custom field. Will return the first encountered selected 
            field options object.
            </summary>  
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldGetSelectedOption(System.String)">
            <summary>
            Returns the selected custom field option object for a custom field. Will return the first encountered selected 
            field options object.
            </summary>  
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldGetSelectedOptions(System.Int64)">
            <summary>
            Returns the list of all selected custom field options objects for a custom field.             
            </summary>  
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldGetOptions(System.Int64)">
            <summary>
            Returns the list of all custom field options for a custom field.
            </summary>
            <param name="cfId"></param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldGetSelectedOptions(ParatureSDK.Fields.CustomField)">
            <summary>
            Returns the list of all selected custom field options objects for a custom field.             
            </summary>  
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldGetSelectedOptions(System.String)">
            <summary>
            Returns the list of all selected custom field options objects for a custom field.             
            </summary>  
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldGetDisplayName(System.Int64)">
            <summary>
            Returns the display name for the custom field id you specified.  Will return empty string if
            the custom field is not found.
            </summary>
            <param name="cfId"></param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldGetId(System.String)">
            <summary>
             Return the id for the custom field name you specified.  Will return -1 if the custom field is not found 
             or duplicates are found.  Search will be case-insensitive.
            </summary>
            <param name="cfName"></param>
            <returns></returns>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntity.CustomFieldSetValue(System.Int64,System.String,System.Collections.Generic.IEnumerable{ParatureSDK.Fields.CustomField},System.Boolean)">
             <summary>
             Adds a custom field to the object, with the value you specify.
             </summary>
             <param name="cfId">
             The id of the custom field to add.
             </param>
             <param name="cfValue">
             The value to set for the cust field.
            </param>
            <param name="customFields"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="P:ParatureSDK.ParaObjects.ParaEntity.Item(System.String)">
            <summary>
            Retrieve a Field based off of its field name (tag element). 
            This is only for static fields - use an integer to search custom fields.
            </summary>
            <param name="fieldName">Name of the field. Use the tag, not the display name ("Date_Created" rather than "Date Created" for example)</param>
            <returns>StaticField if found, otherwise null</returns>
        </member>
        <member name="P:ParatureSDK.ParaObjects.ParaEntity.Item(System.Int64)">
            <summary>
            Retrieve a Field based off of its custom field Id. 
            This is only for custom fields - use a string to search custom fields.
            </summary>
            <param name="fieldId">Custom Field Id</param>
            <returns>CustomField if found, otherwise null</returns>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Account.Viewable_Account">
            <summary>
            The list of all the other Viewable accounts, only available to certain configs.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Action.ShowToCust">
            <summary>
            Indicates whether this action will be visible to the customer or not
            Only used for tickets.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Action.AssignToQueue">
            <summary>
            This property will only be considered when 
            the action if of type Assign to Queue.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Action.AssignToCsr">
            <summary>
            This property will only be considered when 
            the action if of type Assign to CSR.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ActionHistory.Id">
            <summary>
            The unique identifier of this action history item
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ActionHistory.Action">
            <summary>
            the action that run
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ActionHistory.Old_Status">
            <summary>
            The status the object was on, before the action was run
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ActionHistory.New_Status">
            <summary>
            The new status that the object moved to, after the action was run.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ActionHistory.SystemComments">
            <summary>
            Populated comments by the system, generally on routing or TSAs
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ActionHistory.Show_To_Customer">
            <summary>
            Whether this action was exposed to the customer or not.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ActionHistory.Action_Date">
            <summary>
            The date this action took place.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ActionHistory.History_Attachments">
            <summary>
            The list, if any exists, of all the Attachments of this action history item.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.ActionHistoryPerformer">
            <summary>
            Indicates who performed an action history item, whether a CSR or a Customer and includes the id and name of the performer.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.ActionHistoryTarget">
            <summary>
            Indicates who performed an action history item, whether a CSR or a Customer and includes the id and name of the performer.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.ApiCallResponse">
            <summary>
            This class is contains all row information regarding an API call.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ApiCallResponse.CalledUrl">
            <summary>
            The url that was called when making the API call.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ApiCallResponse.HttpCallMethod">
            <summary>
            Call method performed: eg: Post, Put, Delete, etc...
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ApiCallResponse.HttpResponseCode">
            <summary>
            The Http response code that was returned. This might be 0 if the server did not respond.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ApiCallResponse.HasException">
            <summary>
            Whether or not there was an exception.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ApiCallResponse.ExceptionDetails">
            <summary>
            The details of the error message, if the call generated an exception.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ApiCallResponse.XmlReceived">
            <summary>
            The XML that was received back from the server. Will only contain data when a proper XML is returned. This will be null if an exception was encountered. Please check first whether there was an exception or not, then check if this XML document is not null, before trying to use it.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ApiCallResponse.XmlSent">
            <summary>
            The XML that was sent to the server when making the API Call. In case of of a list or a retrieve, there is not XML that is sent. Please check first whether this is a null object or not, before using it.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ApiCallResponse.Id">
            <summary>
            If you were inserting or updating a record, check this value, if it is more than 0, it means the operations
            was successfull. Otherwise, it means there was an issue. If you created a new object, this value will hold the new id.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ApiCallResponse.AutomatedRetries">
            <summary>
            Number of API retries made to get the call to go through
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.Article">
            <summary>
            Holds all the properties of the Knowledge Base module.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Article.Answer">
            <summary>
            The answer to the knowledge base question.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Article.Expiration_Date">
            <summary>
            The date this Article will expire on.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Article.Published">
            <summary>
            Whether this article is published or not.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Article.Question">
            <summary>
            The question asked for this Article.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Article.Rating">
            <summary>
            The average rating this article received.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Article.Times_Viewed">
            <summary>
            The number of times this article has been viewed.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Article.Folders">
            <summary>
            List of Folders under which this article is listed.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Article.Permissions">
            <summary>
            List of Sla type objects. These SLAs are the ones allowed to see this article.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Article.Products">
            <summary>
            List of products that are linked to this article. In case your config uses this feature.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Article.Keywords">
            <summary>
            Comma separated list of keywords that describe a KB article
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Article.Related_Articles">
            <summary>
            List of articles that are related to the this article. Introduced in 15.1
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Folder.ApiCallResponse">
            <summary>
            Contains all the information regarding the API Call that was made.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ArticleTranslation.Answer_Translation">
            <summary>
            Translated Article Answer
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ArticleTranslation.Articleid">
            <summary>
            Id of the Article the ArticleTranslation is referenced to
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ArticleTranslation.Language">
            <summary>
            Language string for the translation
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ArticleTranslation.Published">
            <summary>
            Indicates whether the translation is published
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ArticleTranslation.Question_Translation">
            <summary>
            Translated Question
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Asset.Account_Owner">
            <summary>
            The account that owns the asset, if any.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Asset.Created_By">
            <summary>
            The CSR that created the asset.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Asset.Customer_Owner">
            <summary>
            The customer that owns the asset, if any.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Asset.Modified_By">
            <summary>
            The CSR that last modified the asset.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Asset.Name">
            <summary>
            The name of the Asset.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Asset.Product">
            <summary>
            The product this asset is derived from.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Asset.Status">
            <summary>
            The status of the Asset.
            </summary>           
        </member>
        <member name="P:ParatureSDK.ParaObjects.Asset.Actions">
            <summary>
            The list, if any exists, of all the available actions that can be run agains this ticket.
            Only the id and the name of the action
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.Attachment">
            <summary>
            An attachment object holds the information about any attachment, whether in the ticket history, in the ticket itself, a download, or any other module that supports the attachments feature.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Attachment.Guid">
            <summary>
            This is the unique identifier of the Attachment/Download file in your Parature license.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Attachment.Name">
            <summary>
            The name of the attachment.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Attachment.Href">
            <summary>
            This is the public permanent URL
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Attachment.Error">
            <summary>
            The details of the error message, if the call generated an exception.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Attachment.HasException">
            <summary>
            Whether or not there was an exception.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.Chat">
            <summary>
            Holds all the properties of the Chat module.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Csr.Date_Format">
            <summary>
            The following strings are the valid options for Date_Format:
            mm/dd/yyyy | mm/dd/yy | dd/mm/yyyy | dd/mm/yy | month dd, yyyy | month dd, yy
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.Customer">
            <summary>
            Holds all the properties of the Customer module.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Customer.User_Name">
            <summary>
            Only used when you use "Username" as the identifier of your account.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Customer.Tou">
            <summary>
            User accepted terms of use.
            Certain configs have the terms of use feature activated. This property should be taken into account
            only when you are using the "customer terms of use" feature.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Customer.Password">
            <summary>
            Password is only used when creating a new customer. This property is not filled when retrieving the customer details. It must be empty when updating a customer object.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Customer.Password_Confirm">
            <summary>
            Password confirm is only used when creating a new customer. This property is not filled when retrieving the customer details. It must be empty when updating a customer object.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.Department">
            <summary>
            A department's property.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.Download">
            <summary>
            Holds all the properties of the Download module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaObjects.Download.AttachmentsAdd(ParatureSDK.ParaCredentials,System.Net.Mail.Attachment)">
            <summary>
            Uploads a file to the Parature system, from a standard System.Net.Mail.Attachment object, in case you use this from an email.
            </summary>            
            <param name="EmailAttachment">
            The email attachment to upload.
            </param>
        </member>
        <member name="M:ParatureSDK.ParaObjects.Download.AttachmentsAdd(ParatureSDK.ParaCredentials,System.Byte[],System.String,System.String)">
             <summary>
             Uploads the file to the current Download. 
             The file will also be added to the current Downloads's Guid.
             </summary>
             <param name="Attachment">
             The binary Byte array of the file you would like to upload. 
            </param>           
             <param name="paracredentials">
             The parature credentials class for the APIs.
             </param>            
             <param name="contentType">
             The type of content being uploaded, you have to make sure this is the right text.
             </param>
             <param name="FileName">
             
            </param>
        </member>
        <member name="M:ParatureSDK.ParaObjects.Download.AttachmentsAdd(ParatureSDK.ParaCredentials,System.String,System.String,System.String)">
             <summary>
             Uploads a text based file to the current Download. You need to pass a string, and the mime type of a text based file (html, text, etc...).            
             </summary>
             <param name="text">
             The content of the text based file. 
            </param>           
             <param name="paracredentials">
             The parature credentials class for the APIs.
             </param>            
             <param name="contentType">
             The type of content being uploaded, you have to make sure this is the right text.
             </param>
             <param name="FileName">
             The name you woule like the attachment to have.
            </param>
        </member>
        <member name="M:ParatureSDK.ParaObjects.Download.AttachmentsUpdate(ParatureSDK.ParaCredentials,System.String,System.String,System.String)">
             <summary>
             Updates the current download attachment with a text based file. You need to pass a string, and the mime type of a text based file (html, text, etc...).            
             </summary>
             <param name="text">
             The content of the text based file. 
            </param>           
             <param name="paracredentials">
             The parature credentials class for the APIs.
             </param>            
             <param name="contentType">
             The type of content being uploaded, you have to make sure this is the right text.
             </param>
             <param name="FileName">
             The name you woule like the attachment to have.
            </param>
        </member>
        <member name="M:ParatureSDK.ParaObjects.Download.AttachmentsUpdate(ParatureSDK.ParaCredentials,System.Byte[],System.String,System.String)">
            <summary>
            If you have a download file and would like to replace the file, use this method. It will actually delete 
            the existing attachment, and then add a new one to replace it.
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaObjects.Download.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="allowMultipleFolders">True if Multiple Folders is configured</param>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.Attachment">
            <summary>
            An attachment object holds the information about any attachment.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.Description">
            <summary>
            The description of the download.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.External_Link">
            <summary>
            In case this download consists of an external link, instead of a file, this property will be populated.
            Please make sure, when you use this property (in case of a create/update of a download) 
            that the Guid property is set to empty, as only one of these two properties must be filled.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.Folders">
            <summary>
            The list of folders under which the download is listed.
            In certain configurations, there may only be 1 folder allowed. 
            Check the "MultipleFolders" property to see whether more than one folder is allowed.
            If extra folders are added when only one is allowed, the first in the list will sent
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.Guid">
            <summary>
            If the download consists of a file that has been uploaded, this would be the GUID of the file.
            Please make sure, when you use this property (in case of a create/update of a download) 
            that the ExternalLink property is set to empty, as only one of these two properties must be filled.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.Permissions">
            <summary>
            List of Sla type objects. These SLAs are the ones allowed to see this download.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.Name">
            <summary>
            The name of the download.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.Products">
            <summary>
            List of products that are linked to this download. In case your config uses this feature.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.Published">
            <summary>
            Whether the download is published or not.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.Extension">
            <summary>
            File extension
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.Eula">
            <summary>
            Certain configuration use the End User License Agreement (EULA). this controls what Eula would 
            be associated with this download.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.File_Hits">
            <summary>
            Number of times the files where updated.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Download.File_Size">
            <summary>
            Size of the file.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.DownloadFolder">
            <summary>
            Used only for the downloads module folders.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.DownloadFolder.Parent_Folder">
            <summary>
            To avoid infinite loops, the parent folder is not instantiated when 
            you instantiate a new DownloadFolder object. In the case you are creating a download folder, please make sure to create a new download folder, 
            set just the id of the folder, then make the ParentFolder equals the one you just created.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.EntityReferences.TicketStatusReference.TicketStatus">
            <summary>
            Status of a ticket
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.ChatMessage">
            <summary>
            A single message from a chat
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaObjects.ParaEntityList`1.Add(System.Object)">
            <summary>
            Add method is needed for serialization/deserialization
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Product.Longdesc">
            <summary>
            The long description of the product.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Product.Shortdesc">
            <summary>
            The short description of the product.
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.ProductFolder">
            <summary>
            Used only for the downloads module folders.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ProductFolder.FullyLoaded">
            <summary>
            Indicates whether this object is fully loaded or not. An object that is not fully loaded means 
            that only the id and name are available.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ProductFolder.Date_Updated">
            <summary>
            The last date this folder was updated.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.ProductFolder.Parent_Folder">
            <summary>
            To avoid infinite loops, the parent folder is not instantiated when 
            you instantiate a new ProductFolder object. In the case you are creating a download folder, please make sure to create a new ProductFolder, 
            set just the id of the folder, then make the ParentFolder equals the one you just created.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Status.Customer_Text">
            <summary>
            Specific to ticket statuses
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Status.Text">
            <summary>
            The status internal name, as CSRs see it.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Status.Description">
            <summary>
            The status name as customers see it on the portal and in the emails they receive.
            </summary>
        </member>
        <member name="F:ParatureSDK.ParaObjects.Status.StatusType">
            <summary>
            Specific to ticket statuses
            </summary>
        </member>
        <member name="T:ParatureSDK.ParaObjects.Ticket">
            <summary>
            Holds all the properties of the Ticket module.
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaObjects.Ticket.AttachmentsAdd(ParatureSDK.ParaCredentials,System.Byte[],System.String,System.String)">
             <summary>
             Uploads an attachment to the current ticket. 
             The attachment will also be added to the current Ticket's attachments collection.
             </summary>
             <param name="attachment">
             The binary Byte array of the attachment you would like to add. 
            </param>
            <param name="fileName"></param>
        </member>
        <member name="M:ParatureSDK.ParaObjects.Ticket.AttachmentsAdd(ParatureSDK.ParaCredentials,System.String,System.String,System.String)">
             <summary>
             Uploads a text based file to the current ticket. You need to pass a string, and the mime type of a text based file (html, text, etc...).            
             </summary>
             <param name="text">
             The content of the text based file. 
            </param>           
             <param name="creds">
             The parature credentials class for the APIs.
             </param>            
             <param name="contentType">
             The type of content being uploaded, you have to make sure this is the right text.
             </param>
             <param name="fileName">
             The name you woule like the attachment to have.
            </param>
        </member>
        <member name="M:ParatureSDK.ParaObjects.Ticket.AttachmentsUpdate(ParatureSDK.ParaCredentials,System.String,System.String,System.String,System.String)">
             <summary>
             Updates the current Ticket attachment with a text based file. You need to pass a string, and the mime type of a text based file (html, text, etc...).            
             </summary>
             <param name="text">
             The content of the text based file. 
            </param>           
             <param name="creds">
             The parature credentials class for the APIs.
             </param>            
             <param name="contentType">
             The type of content being uploaded, you have to make sure this is the right text.
             </param>
             <param name="fileName">
             The name you woule like the attachment to have.
            </param>
        </member>
        <member name="M:ParatureSDK.ParaObjects.Ticket.AttachmentsUpdate(ParatureSDK.ParaCredentials,System.Byte[],System.String,System.String,System.String)">
            <summary>
            If you have an attachment and would like to replace the file, use this method. It will actually delete 
            the existing attachment, and then add a new one to replace it.
            </summary>
        </member>
        <member name="M:ParatureSDK.ParaObjects.Ticket.AttachmentsDelete(System.String)">
            <summary>
            If you have an attachment and would like to delete, just pass the id here.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Ticket_Number">
            <summary>
            The full ticket number, including the account number. Usually in the format 
            of Account #-Ticket # 
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Ticket_Product">
            <summary>
            The product associated to a ticket. It will only be populated in certain configurations.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Ticket_Status">
            <summary>
            The status of the ticket
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Ticket_Asset">
            <summary>
            The asset linked to the ticket. this is only populated for certain Product/Asset configurations, when the ticket is linked to an Asset.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Department">
            <summary>
            The department the tickets belongs to. While you specified already the department id in your
            credentials class, it could be that the user you are passing the Token of has access to multiple
            departments. In which case, the tickets that account has access to will be visible (no matter their departments).
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Ticket_Customer">
            <summary>
            The customer that owns the ticket. If your only requested a standard Ticket read, only the customer id is returned withing the Customer class.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Additional_Contact">
            <summary>
            The additional contact associated to this ticket.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Entered_By">
            <summary>
            The CSR that has entered this ticket (this class is filled only when a Ticket has been created by a CSR). Only the CSR id and Name are filled in case of a standard ticket read.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Assigned_To">
            <summary>
            The CSR that is has this ticket assigned to. This class is only filled if the ticket is assigned to a CSR (as opposed to a Queue). If the ticket is assigned to a CSR, this class will only be filled with the ID of the CSR (unless you requested an appropriate request depth.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Email_Notification">
            <summary>
            Whether email notification is turned on or off.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Email_Notification_Additional_Contact">
            <summary>
            Whether email notification to Additional Contact is turned on or off.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Hide_From_Customer">
            <summary>
            Whether email notification to Additional Contact is turned on or off.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Cc_Csr">
            <summary>
            An optional string array of CSR emails that are CCed when an email notification is sent.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Cc_Customer">
            <summary>
            An optional string array of customer emails that are CCed when an email notification is sent.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Ticket_Queue">
            <summary>
            The Queue that has this ticket assigned to. This class is only filled if the ticket is assigned to a Queue (as opposed to a CSR).
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Ticket_Parent">
            <summary>
            Parent Ticket of this ticket. Only filled whenever there is a parent ticket. Also, only the ticket id will be filled. Please make sure
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Ticket_Children">
            <summary>
            The list, if any exists, of all the child tickets. Please note that, by default, only the ticket id is filled.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Related_Chats">
            <summary>
            The list, if any exists, of all the related chats.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Ticket_Attachments">
            <summary>
            The list, if any exists, of all the Attachments of this ticket.
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.Actions">
            <summary>
            The list, if any exists, of all the available actions that can be run agains this ticket.
            Only the id and the name of the action
            </summary>
        </member>
        <member name="P:ParatureSDK.ParaObjects.Ticket.ActionHistory">
            <summary>
            The actions that ran on this ticket. This is only populated if you requested the ticket action history.
            </summary>
        </member>
        <member name="T:ParatureSDK.ThreadPool">
            <summary>
            Main Thread controller class
            </summary>
        </member>
        <member name="T:ParatureSDK.ThreadPool.ObjectList">
            <summary>
            Main Thread object, limit of 5 parallel threads
            </summary>
        </member>
        <member name="M:ParatureSDK.ThreadPool.ObjectList.#ctor(ParatureSDK.ParaCredentials,ParatureSDK.ParaEnums.ParatureModule,System.Collections.ArrayList)">
            <summary>
            
            </summary>
            <param name="paracredentials"></param>
            <param name="module"></param>
            <param name="arguments"></param>
        </member>
        <member name="M:ParatureSDK.ThreadPool.ObjectList.Go(ParatureSDK.ParaObjects.ParaEntityList{ParatureSDK.ParaObjects.Customer})">
            <summary>
            
            </summary>
            <param name="customerList"></param>
        </member>
        <member name="M:ParatureSDK.ThreadPool.ObjectList.Go(ParatureSDK.ParaObjects.ParaEntityList{ParatureSDK.ParaObjects.Chat},System.Boolean)">
            <summary>
            
            </summary>
            <param name="chatList"></param>
            <param name="includeTranscripts"></param>
        </member>
        <member name="M:ParatureSDK.ThreadPool.ObjectList.Go(ParatureSDK.ParaObjects.ParaEntityList{ParatureSDK.ParaObjects.Account})">
            <summary>
            
            </summary>
            <param name="accountList"></param>
        </member>
        <member name="M:ParatureSDK.ThreadPool.ObjectList.Go(ParatureSDK.ParaObjects.ParaEntityList{ParatureSDK.ParaObjects.Ticket})">
            <summary>
            
            </summary>
            <param name="accountList"></param>
        </member>
        <member name="M:ParatureSDK.ThreadPool.ObjectList.Go(ParatureSDK.ParaObjects.ParaEntityList{ParatureSDK.ParaObjects.Product})">
            <summary>
            
            </summary>
            <param name="accountList"></param>
        </member>
        <member name="M:ParatureSDK.ThreadPool.ObjectList.Go(ParatureSDK.ParaObjects.ParaEntityList{ParatureSDK.ParaObjects.Asset})">
            <summary>
            
            </summary>
            <param name="accountList"></param>
        </member>
        <member name="M:ParatureSDK.ThreadPool.ObjectList.Go(ParatureSDK.ParaObjects.ParaEntityList{ParatureSDK.ParaObjects.Download})">
            <summary>
            
            </summary>
            <param name="accountList"></param>
        </member>
        <member name="M:ParatureSDK.ThreadPool.ObjectList.Go(ParatureSDK.ParaObjects.ParaEntityList{ParatureSDK.ParaObjects.Article})">
            <summary>
            
            </summary>
            <param name="accountList"></param>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.Account)">
            <summary>
            This methods requires the account object to be inserted/updated, and returns the XML to be posted to the APIs Server
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.Customer)">
            <summary>
            This methods requires the Contact object to be inserted/updated, and returns the XML to be posted to the APIs Server
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.Asset)">
            <summary>
            This methods requires the Asset object to be inserted/updated, and returns the XML to be posted to the APIs Server
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.Ticket)">
            <summary>
            This methods requires the Ticket object to be inserted/updated, and returns the XML to be posted to the APIs Server
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.Action,ParatureSDK.ParaEnums.ParatureModule)">
            <summary>
            Generate the XML needed to run an action.
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.Product)">
            <summary>
            Generate the XML needed to create/update a product.
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.Article)">
            <summary>
            Generate the XML needed to create/update a Knowledge Base Article.
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.Csr)">
            <summary>
            Generate the XML needed to create/update a Csr.
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.Download)">
            <summary>
            This methods requires the Download object to be inserted/updated, and returns the XML to be posted to the APIs Server
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.DownloadFolder)">
            <summary>
            This methods requires the DownloadFolder object to be inserted/updated, and returns the XML to be posted to the APIs Server
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.ArticleFolder)">
            <summary>
            This methods requires the ArticleFolder object to be inserted/updated, and returns the XML to be posted to the APIs Server
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.GenerateXml(ParatureSDK.ParaObjects.ProductFolder)">
            <summary>
            This methods requires the ProductFolder object to be inserted/updated, and returns the XML to be posted to the APIs Server
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.XmlGenerateElement(System.Xml.XmlDocument,System.Xml.XmlNode,System.String,System.String)">
            <summary>
            An internal method that generates a node and apprend it to the xmldocument root element passed to it.
            </summary>       
        </member>
        <member name="M:ParatureSDK.XmlGenerator.XmlGenerateCDataElement(System.Xml.XmlDocument,System.Xml.XmlNode,System.String,System.String)">
            <summary>
            An internal method that generates a CData node and apprend it to the xmldocument root element passed to it.
            </summary>       
        </member>
        <member name="M:ParatureSDK.XmlGenerator.XmlGenerateElementFromArray(System.Xml.XmlDocument,System.Xml.XmlNode,System.String,System.Collections.ArrayList,System.String)">
            <summary>
            An internal method that generates a node from a string array and apprend it to the xmldocument root element passed to it.
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.XmlGenerateComplexEntityNode(System.Xml.XmlDocument,System.Xml.XmlNode,System.String,System.String,System.String,System.String)">
            <summary>
            An internal method that generates a complex entity node with an external name and an internal element name to apprend it to the xmldocument root element passed to it.
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.ObjectGenerateAttachmentNodes(System.Xml.XmlDocument,System.Xml.XmlNode,System.String,System.String,System.Collections.Generic.List{ParatureSDK.ParaObjects.Attachment})">
            <summary>
            Generates the whole attachments node that contains the attachment collection details.
            Useful for objects that may contain multiple attachments (ticket, action, etc).
            </summary>
            <param name="doc"></param>
            <param name="objNode"></param>
            <param name="externalAttachmentNodeName">
            The external node name for the attachment collection. For example: "Ticket_Attachment" for ticket attachments.
            </param>
            <param name="attachmentNodeName">
            This would be the node name for each attachment in the collection.
            </param>
            <param name="attachments"></param>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.ObjectGenerateAttachmentNode(System.Xml.XmlDocument,System.Xml.XmlNode,System.String,ParatureSDK.ParaObjects.Attachment)">
            <summary>
            Appends a single attachment node.
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.XmlGenerateEntityNode(System.Xml.XmlDocument,System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            An internal method that generates an entity node and apprend it to the xmldocument root element passed to it.
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlGenerator.ObjectGenerateCustomFieldsXml(System.Xml.XmlDocument,System.Xml.XmlNode,System.Collections.Generic.IEnumerable{ParatureSDK.Fields.CustomField})">
            <summary>
            Loops through the custom fields and prepares (then appends) the whole XML portion dealing with them.
            </summary>
        </member>
        <member name="T:ParatureSDK.XmlApiSerializer">
            <summary>
            WIP if we ever decide to create a serializer using the XmlSerializer class
            </summary>
        </member>
        <member name="M:ParatureSDK.XmlToObjectParser.ParaEntityParser.FillListDownload(System.Xml.XmlDocument)">
            <summary>
            Download module can have a config that changes the schema... 
            This does the same as the generic FillList method, but overwrites the XML to account for the changing schema
            Specific node is "Folder" vs "Folders"
            </summary>
            <param name="xmlDoc"></param>
            <returns></returns>
        </member>
        <member name="T:ParatureSDK.XmlToObjectParser.AttachmentParser">
            <summary>
            This class takes care of parsing the different XMLs returned when sending an attachment.
            </summary>
        </member>
    </members>
</doc>
